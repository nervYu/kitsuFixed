{"version":3,"file":"Settings-156a1a2c.js","sources":["../../src/components/pages/Settings.vue"],"sourcesContent":["<template>\n  <div class=\"settings page\">\n    <div class=\"settings-content\">\n\n      <div class=\"settings-body\">\n        <h2>\n          {{ $t('settings.title') }}\n        </h2>\n        <p>\n        <label class=\"label\">\n          {{ $t('settings.logo') }}\n        </label>\n        </p>\n        <div class=\"logo-wrapper\" v-if=\"organisation.has_avatar\">\n          <img :src=\"organisationLogoPath\" />\n        </div>\n        <p class=\"no-logo\" v-else>\n          {{ $t('settings.no_logo') }}\n        </p>\n        <p>\n          <button class=\"button set-logo-button\" @click=\"showAvatarModal\">\n            {{ $t('settings.set_logo') }}\n          </button>\n        </p>\n        <text-field\n          class=\"mt2\"\n          :label=\"$t('settings.fields.name')\"\n          @enter=\"saveSettings()\"\n          v-model=\"form.name\"\n        />\n        <text-field\n          :label=\"$t('settings.fields.hours_by_day')\"\n          type=\"number\"\n          @enter=\"saveSettings()\"\n          v-model=\"form.hours_by_day\"\n        />\n        <combobox-boolean\n          :label=\"$t('settings.fields.use_original_name')\"\n          @enter=\"saveSettings()\"\n          v-model=\"form.use_original_file_name\"\n        />\n        <combobox-boolean\n          :label=\"$t('settings.fields.show_hd_default')\"\n          @enter=\"saveSettings()\"\n          v-model=\"form.hd_by_default\"\n        />\n        <combobox-boolean\n          :label=\"$t('settings.fields.timesheets_locked')\"\n          @enter=\"saveSettings()\"\n          v-model=\"form.timesheets_locked\"\n        />\n        <h2>\n          {{ $t('settings.integrations') }}\n        </h2>\n        <text-field\n          :label=\"$t('settings.fields.slack_token')\"\n          @enter=\"saveSettings()\"\n          v-model=\"form.chat_token_slack\"\n        />\n\n        <text-field\n          :label=\"$t('settings.fields.discord_token')\"\n          @enter=\"saveSettings()\"\n          v-model=\"form.chat_token_discord\"\n        />\n\n        <div id=\"mattermost_integrations\">\n          <text-field\n          :label=\"$t('settings.fields.mattermost_webhook')\"\n          @enter=\"saveSettings()\"\n          v-model=\"form.chat_webhook_mattermost\"\n          />\n          <div\n            class=\"error pull-right\"\n            v-if=\"this.errors.webhook_error === true\"\n          >\n            <em>{{ $t('settings.webhook_error') }}</em>\n          </div>\n        </div>\n\n        <button\n          :class=\"{\n            button: true,\n            'save-button': true,\n            'is-medium': true,\n            'is-loading': loading.save\n          }\"\n          @click=\"saveSettings()\"\n        >\n          {{ $t('settings.save.button') }}\n        </button>\n        <p\n          :class=\"{\n            error: true,\n            'is-hidden': !errors.save\n          }\"\n        >\n          {{ $t('settings.save.error') }}\n        </p>\n\n      </div>\n    </div>\n\n    <change-avatar-modal\n      :active=\"modals.avatar\"\n      :is-loading=\"loading.saveAvatar\"\n      :is-error=\"errors.saveAvatar\"\n      :title=\"$t('settings.change_logo')\"\n      @confirm=\"uploadAvatarFile\"\n      @cancel=\"hideAvatarModal\"\n    />\n\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport ChangeAvatarModal from '@/components/modals/ChangeAvatarModal'\nimport ComboboxBoolean from '@/components/widgets/ComboboxBoolean'\nimport TextField from '@/components/widgets/TextField'\n\nexport default {\n  name: 'settings',\n\n  components: {\n    ChangeAvatarModal,\n    ComboboxBoolean,\n    TextField\n  },\n\n  data () {\n    return {\n      organisationLogoKey: new Date().getUTCDate(),\n      organisationLogoPath: '',\n      form: {\n        name: '',\n        hours_by_day: 0,\n        original_file_name: 'false',\n        hd_by_default: 'false',\n        chat_token_slack: '',\n        chat_webhook_mattermost: '',\n        chat_token_discord: ''\n      },\n      errors: {\n        save: false,\n        saveAvatar: false,\n        webhook_error: false\n      },\n      loading: {\n        save: false,\n        saveAvatar: false\n      },\n      modals: {\n        avatar: false\n      }\n    }\n  },\n\n  mounted () {\n    this.form = Object.assign(this.form, this.organisation)\n    this.organisationLogoKey = 'key' + new Date().toISOString()\n    this.organisationLogoPath = '/api/pictures/thumbnails/organisations/' +\n                                `${this.organisation.id}.png`\n  },\n\n  computed: {\n    ...mapGetters([\n      'organisation'\n    ])\n  },\n\n  methods: {\n    ...mapActions([\n      'changeAvatar',\n      'uploadOrganisationLogo',\n      'saveOrganisation'\n    ]),\n\n    checkWebhook () {\n      if (!this.form.chat_webhook_mattermost ||\n      this.form.chat_webhook_mattermost.match('/trigger-webhook/[a-zA-Z0-9]+$')) {\n        this.errors.webhook_error = false\n        return true\n      } else {\n        this.errors.webhook_error = true\n        return false\n      }\n    },\n\n    hideAvatarModal () {\n      this.modals.avatar = false\n    },\n\n    saveSettings () {\n      if (this.checkWebhook()) {\n        this.loading.save = true\n        this.errors.save = false\n        this.saveOrganisation(this.form)\n          .then(() => {\n            this.loading.save = false\n            this.errors.save = false\n          })\n          .catch((err) => {\n            console.error(err)\n            this.loading.save = false\n            this.errors.save = true\n          })\n      }\n    },\n\n    uploadAvatarFile (formData) {\n      this.loading.saveAvatar = true\n      this.errors.saveAvatar = false\n      this.uploadOrganisationLogo(formData)\n        .then(() => {\n          setTimeout(() => {\n            this.loading.saveAvatar = false\n            this.modals.avatar = false\n            this.organisationLogoPath =\n              '/api/pictures/thumbnails/organisations/' +\n              `${this.organisation.id}.png?t=` + new Date().toISOString()\n          }, 500)\n        })\n        .catch((err) => {\n          console.error(err)\n          this.loading.saveAvatar = false\n          this.errors.saveAvatar = true\n        })\n    },\n\n    showAvatarModal () {\n      this.modals.avatar = true\n    }\n  },\n\n  watch: {\n    organisation () {\n      this.form = {\n        name: this.organisation.name,\n        hours_by_day: this.organisation.hours_by_day,\n        use_original_file_name:\n          this.organisation.use_original_file_name ? 'true' : 'false',\n        timesheets_locked:\n          this.organisation.timesheets_locked ? 'true' : 'false',\n        hd_by_default:\n          this.organisation.hd_by_default ? 'true' : 'false',\n        chat_token_slack: this.organisation.chat_token_slack,\n        chat_token_discord: this.organisation.chat_token_discord,\n        chat_webhook_mattermost: this.organisation.chat_webhook_mattermost\n      }\n    }\n  },\n\n  metaInfo () {\n    return {\n      title: `${this.$t('settings.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .settings {\n    background: #36393F;\n    color: $white-grey;\n  }\n\n  .settings-content {\n    background: $dark-grey-lighter;\n    color: $white-grey;\n  }\n\n  .set-logo-button {\n    background-color: $grey;\n    color: $dark-grey\n  }\n}\n\n#mattermost_integrations{\n  margin-bottom: 4em;\n}\n\n#mattermost_integrations .field{\n  margin-bottom: 0em;\n}\n\nstrong {\n  text-transform: uppercase;\n}\n\n.settings {\n  background: $white-grey;\n  height: 100%;\n}\n\n.settings-content {\n  background: white;\n  max-width: 500px;\n  margin: auto;\n  margin-top: 2em;\n  margin-bottom: 2em;\n  box-shadow: rgba(0,0,0,0.15) 0px 1px 4px 2px;\n  border-radius: 1em;\n}\n\n.settings-body {\n  padding: 2em;\n}\n\ninput, select, span.select {\n  width: 100%;\n}\n\nh2:first-child {\n  margin-top: 0em;\n}\n\n.save-button {\n  background: $green;\n  border-radius: 2em;\n  border-color: $green;\n  color: white;\n  width: 100%;\n}\n\n.save-button:hover {\n  background: $light-green;\n  border-color: $light-green;\n}\n\n.logo-wrapper {\n  padding: 0;\n\n  img {\n    width: 100px;\n  }\n}\n\n.no-logo {\n  margin-bottom: 1em;\n}\n</style>\n"],"names":["_sfc_main","ChangeAvatarModal","ComboboxBoolean","TextField","mapGetters","mapActions","err","formData"],"mappings":"wHA0HA,MAAAA,EAAA,CACA,KAAA,WAEA,WAAA,CACA,kBAAAC,EACA,gBAAAC,EACA,UAAAC,CACA,EAEA,MAAA,CACA,MAAA,CACA,oBAAA,IAAA,KAAA,EAAA,WAAA,EACA,qBAAA,GACA,KAAA,CACA,KAAA,GACA,aAAA,EACA,mBAAA,QACA,cAAA,QACA,iBAAA,GACA,wBAAA,GACA,mBAAA,EACA,EACA,OAAA,CACA,KAAA,GACA,WAAA,GACA,cAAA,EACA,EACA,QAAA,CACA,KAAA,GACA,WAAA,EACA,EACA,OAAA,CACA,OAAA,EACA,CACA,CACA,EAEA,SAAA,CACA,KAAA,KAAA,OAAA,OAAA,KAAA,KAAA,KAAA,YAAA,EACA,KAAA,oBAAA,MAAA,IAAA,KAAA,EAAA,YAAA,EACA,KAAA,qBAAA,0CACA,KAAA,aAAA,QACA,EAEA,SAAA,CACA,GAAAC,EAAA,CACA,cACA,CAAA,CACA,EAEA,QAAA,CACA,GAAAC,EAAA,CACA,eACA,yBACA,kBACA,CAAA,EAEA,cAAA,CACA,MAAA,CAAA,KAAA,KAAA,yBACA,KAAA,KAAA,wBAAA,MAAA,gCAAA,GACA,KAAA,OAAA,cAAA,GACA,KAEA,KAAA,OAAA,cAAA,GACA,GAEA,EAEA,iBAAA,CACA,KAAA,OAAA,OAAA,EACA,EAEA,cAAA,CACA,KAAA,iBACA,KAAA,QAAA,KAAA,GACA,KAAA,OAAA,KAAA,GACA,KAAA,iBAAA,KAAA,IAAA,EACA,KAAA,IAAA,CACA,KAAA,QAAA,KAAA,GACA,KAAA,OAAA,KAAA,EACA,CAAA,EACA,MAAAC,GAAA,CACA,QAAA,MAAAA,CAAA,EACA,KAAA,QAAA,KAAA,GACA,KAAA,OAAA,KAAA,EACA,CAAA,EAEA,EAEA,iBAAAC,EAAA,CACA,KAAA,QAAA,WAAA,GACA,KAAA,OAAA,WAAA,GACA,KAAA,uBAAAA,CAAA,EACA,KAAA,IAAA,CACA,WAAA,IAAA,CACA,KAAA,QAAA,WAAA,GACA,KAAA,OAAA,OAAA,GACA,KAAA,qBACA,0CACA,KAAA,aAAA,YAAA,IAAA,KAAA,EAAA,YAAA,CACA,EAAA,GAAA,CACA,CAAA,EACA,MAAAD,GAAA,CACA,QAAA,MAAAA,CAAA,EACA,KAAA,QAAA,WAAA,GACA,KAAA,OAAA,WAAA,EACA,CAAA,CACA,EAEA,iBAAA,CACA,KAAA,OAAA,OAAA,EACA,CACA,EAEA,MAAA,CACA,cAAA,CACA,KAAA,KAAA,CACA,KAAA,KAAA,aAAA,KACA,aAAA,KAAA,aAAA,aACA,uBACA,KAAA,aAAA,uBAAA,OAAA,QACA,kBACA,KAAA,aAAA,kBAAA,OAAA,QACA,cACA,KAAA,aAAA,cAAA,OAAA,QACA,iBAAA,KAAA,aAAA,iBACA,mBAAA,KAAA,aAAA,mBACA,wBAAA,KAAA,aAAA,uBACA,CACA,CACA,EAEA,UAAA,CACA,MAAA,CACA,MAAA,GAAA,KAAA,GAAA,gBAAA,WACA,CACA,CACA"}