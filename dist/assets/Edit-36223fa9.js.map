{"version":3,"file":"Edit-36223fa9.js","sources":["../../src/components/previews/PreviewsPerTaskType.vue","../../src/components/pages/Edit.vue"],"sourcesContent":["<template>\n<div class=\"flexrow\">\n\n  <combobox-styled\n    ref=\"task-type-combobox\"\n    class=\"flexrow-item\"\n    :options=\"taskTypeOptions\"\n    v-model=\"taskTypeId\"\n    v-if=\"taskTypeOptions.length > 0\"\n  />\n\n  <combobox-styled\n    class=\"flexrow-item\"\n    :options=\"previewFileOptions\"\n    v-if=\"previewFileOptions.length\"\n    v-model=\"previewFileId\"\n  />\n  <span class=\"text flexrow-item\" v-else>Selected task has no previews.</span>\n\n  <div class=\"flexrow-item\" v-if=\"taskStatus\">\n    <validation-tag\n      class=\"flexrow-item\"\n      :task=\"{ task_status_id: taskStatus.id}\"\n      :is-static=\"true\"\n      :thin=\"false\"\n    />\n  </div>\n</div>\n</template>\n\n<script>\n/*\n * Widget displaying entity's revisions of previews per task type.\n * It allows to select a given revision for a given task type for current entity.\n */\nimport firstBy from 'thenby'\nimport { mapGetters } from 'vuex'\n\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled'\nimport ValidationTag from '@/components/widgets/ValidationTag'\n\nexport default {\n  name: 'previews-per-task-type',\n\n  components: {\n    ComboboxStyled,\n    ValidationTag\n  },\n\n  data () {\n    return {\n      taskTypeId: null,\n      previewFileId: this.entity.preview_file_id\n    }\n  },\n\n  props: {\n    entityMap: {\n      default: () => {},\n      type: Map\n    },\n    index: {\n      default: 0,\n      type: Number\n    },\n    entity: {\n      default: () => {},\n      type: Object\n    }\n  },\n\n  mounted () {\n    this.setCurrentParameters()\n  },\n\n  computed: {\n    ...mapGetters([\n      'taskMap',\n      'taskTypeMap',\n      'taskStatusMap',\n      'isCurrentUserManager'\n    ]),\n\n    taskTypeOptions () {\n      const entity = this.entityMap.get(this.entity.id)\n      return entity.tasks\n        .map(taskId => this.taskMap.get(taskId))\n        .map(task => this.taskTypeMap.get(task.task_type_id))\n        .sort(firstBy('priority', 1).thenBy('name'))\n        .map((taskType) => {\n          return {\n            label: taskType.name,\n            value: taskType.id\n          }\n        })\n    },\n\n    previewFileOptions () {\n      const previewFiles = this.entity.preview_files[this.taskTypeId] || []\n      return previewFiles.map(previewFile => ({\n        label: `v${previewFile.revision}`,\n        value: previewFile.id\n      }))\n    },\n\n    taskStatus () {\n      if (!this.entityMap) return ''\n\n      const entity = this.entityMap.get(this.entity.id)\n      if (!entity) return ''\n\n      const taskId = entity.validations.get(this.taskTypeId)\n      if (taskId) {\n        const task = this.taskMap.get(taskId)\n        if (!task) return ''\n        const taskStatus = this.taskStatusMap.get(task.task_status_id)\n        return taskStatus\n      } else {\n        return ''\n      }\n    }\n  },\n\n  methods: {\n    getTaskTypeIdForPreviewFile (taskTypeIds, previewFileId) {\n      return taskTypeIds.find((taskTypeId) => {\n        const previewFiles = this.entity.preview_files[taskTypeId]\n        return previewFiles.some(previewFile => {\n          return previewFile.id === previewFileId\n        })\n      })\n    },\n\n    setCurrentParameters () {\n      // Find task type matching current preview.\n      const taskTypeIds = Object.keys(this.entity.preview_files)\n      if (taskTypeIds.length > 0) {\n        if (this.entity.preview_file_id) {\n          this.taskTypeId = this.getTaskTypeIdForPreviewFile(\n            taskTypeIds,\n            this.entity.preview_file_id\n          )\n        }\n        if (!this.taskTypeId) {\n          this.taskTypeId = taskTypeIds[0]\n        }\n      }\n    }\n  },\n\n  watch: {\n    taskTypeId () {\n      // Set current preview was last preview selected. If there is no preview\n      // matching this task type, it selects the first preview available for\n      // this task type.\n      const previewFiles = this.entity.preview_files[this.taskTypeId]\n      if (previewFiles && previewFiles.length > 0) {\n        const isPreviewFile = previewFiles.some(previewFile => {\n          return previewFile.id === this.entity.preview_file_id\n        })\n        if (isPreviewFile) {\n          this.previewFileId = this.entity.preview_file_id\n        } else {\n          this.previewFileId = previewFiles[0].id\n        }\n      } else {\n        this.previewFileId = null\n      }\n    },\n\n    previewFileId () {\n      let previewFile = null\n      const previewFiles = this.entity.preview_files[this.taskTypeId]\n      if (previewFiles && previewFiles.length > 0) {\n        previewFile = previewFiles.find(previewFile => {\n          return previewFile.id === this.previewFileId\n        })\n      }\n      this.$emit('preview-changed', this.entity, previewFile)\n    },\n\n    'entity.preview_files': function () {\n    },\n\n    'entity.preview_file_id': function () {\n      if (this.previewFileId !== this.entity.preview_file_id) {\n        this.previewFileId = this.entity.preview_file_id\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.field {\n  margin-bottom: 0em;\n}\n.text {\n  color: var(--text);\n}\n</style>\n","<template>\n<div class=\"columns fixed-page edit xyz-in\" xyz=\"fade\">\n  <div class=\"column main-column\">\n    <div class=\"page-header flexrow flexrow-item\" ref=\"page-header-row\">\n      <div class=\"flexrow block mb0 main-block\">\n        <router-link\n          class=\"flexrow-item has-text-centered back-link\"\n          :to=\"editsPath\"\n        >\n          <corner-left-up-icon />\n        </router-link>\n        <span\n          class=\"flexrow-item\"\n        >\n          <entity-thumbnail\n            class=\"entity-thumbnail\"\n            :entity=\"currentEntity\"\n            :empty-height=\"60\"\n            :empty-width=\"100\"\n            :height=\"60\"\n            :width=\"100\"\n            v-if=\"currentEntity\"\n          />\n        </span>\n        <div class=\"entity-title flexrow-item mr1\">\n          {{ title }}\n        </div>\n        <div\n          class=\"flexrow-item has-text-centered\"\n          :key=\"currentEntity.id\"\n          v-if=\"!isLoading && currentEntity\"\n        >\n          <previews-per-task-type\n            ref=\"previews-per-task-type\"\n            :entity=\"currentEntity\"\n            :entity-map=\"editMap\"\n            @preview-changed=\"onPreviewChanged\"\n          />\n        </div>\n      </div>\n      <div class=\"filler\"></div>\n      <div class=\"flexrow-item block mt0\">\n        <preview-room\n          :ref=\"previewRoomRef\"\n          :roomId=\"(currentEdit && isValidRoomId(currentEdit.id)) ? currentEdit.id : ''\"\n          :joinRoom=\"joinRoom\"\n          :leaveRoom=\"leaveRoom\"\n          v-if=\"currentEdit && isValidRoomId(currentEdit.id) && currentPreview && currentPreview.id\"\n        />\n      </div>\n    </div>\n\n    <div\n      ref=\"container\"\n      class=\"edit player block\"\n    >\n      <div\n        class=\"flexrow filler\"\n        v-show=\"!isLoading\"\n      >\n        <div\n          class=\"flexrow filler video-container\"\n          ref=\"video-container\"\n        >\n          <raw-video-player\n            ref=\"raw-player\"\n            class=\"raw-player\"\n            :style=\"{\n              position: 'static',\n              opacity: overlayOpacity\n            }\"\n            :entities=\"entityList\"\n            :full-screen=\"fullScreen\"\n            :is-hd=\"isHd\"\n            :is-repeating=\"isRepeating\"\n            :current-preview-index=\"currentPreviewIndex\"\n            :muted=\"isMuted\"\n            @max-duration-update=\"onMaxDurationUpdate\"\n            @metadata-loaded=\"onMetadataLoaded\"\n            @repeat=\"onVideoRepeated\"\n            @frame-update=\"onFrameUpdate\"\n            v-show=\"isCurrentPreviewMovie && !isLoading\"\n          />\n\n          <object-viewer\n            ref=\"object-player\"\n            class=\"object-player\"\n            :preview-url=\"currentPreviewDlPath\"\n            :style=\"{\n              position: 'static',\n              opacity: overlayOpacity\n            }\"\n            :full-screen=\"fullScreen\"\n            v-if=\"isCurrentPreviewModel && !isLoading\"\n          />\n\n          <sound-viewer\n            ref=\"sound-player\"\n            class=\"sound-player\"\n            :preview-url=\"currentPreviewDlPath\"\n            :full-screen=\"fullScreen\"\n            @play-ended=\"pause\"\n            v-if=\"isCurrentPreviewSound && !isLoading\"\n          />\n\n          <p\n            :style=\"{width: '100%'}\"\n            class=\"preview-standard-file has-text-centered\"\n            v-show=\"isCurrentPreviewFile && !isLoading\"\n          >\n            <a\n              class=\"button\"\n              ref=\"preview-file\"\n              :href=\"currentPreviewDlPath\"\n              v-if=\"extension && extension.length > 0\"\n            >\n              <download-icon class=\"icon\" />\n              <span class=\"text\">\n                {{ $t('tasks.download_pdf_file', {extension: extension}) }}\n              </span>\n            </a>\n          </p>\n\n          <div\n            class=\"picture-preview-wrapper flexrow\"\n            ref=\"picture-player-wrapper\"\n            :style=\"{\n              position: 'static',\n              opacity: overlayOpacity,\n              left: 0,\n              right: 0\n            }\"\n            v-show=\"isCurrentPreviewPicture && !isLoading\"\n          >\n             <img\n               ref=\"picture-player\"\n               id=\"picture-player\"\n               class=\"picture-preview\"\n               :src=\"isCurrentPreviewPicture ? currentPreviewPath : null\"\n               v-show=\"isCurrentPreviewPicture\"\n             />\n          </div>\n\n          <div class=\"loading-wrapper\" v-if=\"isLoading\">\n            <spinner />\n          </div>\n\n          <div\n            class=\"canvas-wrapper\"\n            ref=\"canvas-wrapper\"\n            oncontextmenu=\"return false;\"\n            v-show=\"!isCurrentPreviewFile\"\n          >\n            <canvas\n              id=\"edit-annotation-canvas\"\n              ref=\"annotation-canvas\"\n              class=\"canvas\"\n            >\n            </canvas>\n          </div>\n        </div>\n        <task-info\n          ref=\"task-info\"\n          :class=\"{\n            'flexrow-item': true,\n            'task-info-column': true,\n            'hidden': isCommentsHidden\n          }\"\n          :task=\"task\"\n          :is-preview=\"false\"\n          :silent=\"isCommentsHidden\"\n          :current-time-raw=\"currentTimeRaw - frameDuration\"\n          :current-parent-preview=\"currentPreview\"\n          @time-code-clicked=\"onTimeCodeClicked\"\n        />\n      </div>\n\n      <video-progress\n        ref=\"video-progress\"\n        class=\"video-progress pull-bottom\"\n        :annotations=\"annotations\"\n        :frame-duration=\"frameDuration\"\n        :nb-frames=\"nbFrames\"\n        :handle-in=\"-1\"\n        :handle-out=\"-1\"\n        @start-scrub=\"onScrubStart\"\n        @end-scrub=\"onScrubEnd\"\n        @progress-changed=\"onProgressChanged\"\n        v-show=\"isCurrentPreviewMovie && currentPreview.id\"\n      />\n\n      <div\n        class=\"player-footer flexrow\"\n        ref=\"button-bar\"\n        v-if=\"currentEntity && currentEntity.id\"\n      >\n        <div\n          class=\"flexrow flexrow-item mr0\"\n          v-if=\"\n            isCurrentPreviewMovie ||\n            isCurrentPreviewPicture ||\n            isCurrentPreviewSound\"\n        >\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            @click=\"playClicked\"\n            :title=\"$t('playlists.actions.play')\"\n            icon=\"play\"\n            v-if=\"!isPlaying\"\n          />\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            @click=\"pauseClicked\"\n            :title=\"$t('playlists.actions.pause')\"\n            icon=\"pause\"\n            v-else\n          />\n        </div>\n        <div class=\"separator\"></div>\n\n        <template v-if=\"isCurrentPreviewPicture\">\n          {{ framesSeenOfPicture }} /\n          <input\n            type=\"number\"\n            min=\"0\"\n            class=\"frame-per-image-input\"\n            :title=\"$t('playlists.actions.frames_per_picture')\"\n            v-model=\"framesPerImage[playingEntityIndex]\"\n          >\n        </template>\n        <div class=\"separator\" v-if=\"isCurrentPreviewPicture\"></div>\n\n        <div\n          class=\"flexrow flexrow-item\"\n          v-if=\"currentEntityPreviewLength > 1\"\n        >\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            icon=\"left\"\n            :title=\"$t('playlists.actions.files_previous')\"\n            :disabled=\"isPlaying\"\n            @click=\"onPreviousPreviewClicked\"\n          />\n          <span\n            class=\"ml05 mr05\"\n            :title=\"$t('playlists.actions.files_position')\"\n          >\n            {{ currentPreviewIndex + 1 }} / {{ currentEntityPreviewLength }}\n          </span>\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            icon=\"right\"\n            :title=\"$t('playlists.actions.files_next')\"\n            :disabled=\"isPlaying\"\n            @click=\"onNextPreviewClicked\"\n          />\n          <a\n            class=\"button player-button flexrow-item\"\n            :href=\"currentPreviewPath\"\n            :title=\"$t('playlists.actions.see_original_file')\"\n            target=\"blank\"\n          >\n            <arrow-up-right-icon class=\"icon is-small\" />\n          </a>\n        </div>\n\n        <div\n          class=\"flexrow flexrow-item\"\n          v-if=\"isCurrentPreviewMovie\"\n        >\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            @click=\"onSpeedClicked\"\n            :title=\"$t('playlists.actions.speed')\"\n            text=\"x1.00\"\n            v-if=\"speed === 3\"\n          />\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            @click=\"onSpeedClicked\"\n            :title=\"$t('playlists.actions.speed')\"\n            text=\"x0.50\"\n            v-else-if=\"speed === 2\"\n          />\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            @click=\"onSpeedClicked\"\n            :title=\"$t('playlists.actions.speed')\"\n            text=\"x0.25\"\n            v-else\n          />\n\n          <button-simple\n            class=\"flexrow-item player-button\"\n            :title=\"$t('playlists.actions.unmute')\"\n            icon=\"soundoff\"\n            @click=\"onToggleSoundClicked\"\n            v-if=\"isMuted\"\n          />\n          <button-simple\n            class=\"flexrow-item player-button\"\n            :title=\"$t('playlists.actions.mute')\"\n            icon=\"soundon\"\n            @click=\"onToggleSoundClicked\"\n            v-else\n          />\n\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            :active=\"isRepeating\"\n            :title=\"$t('playlists.actions.looping')\"\n            icon=\"repeat\"\n            @click=\"onRepeatClicked\"\n          />\n\n          <span\n            class=\"flexrow-item time-indicator\"\n            :title=\"$t('playlists.actions.current_time')\"\n          >\n            {{ currentTime }}\n          </span>\n          <span class=\"flexrow-item time-indicator\">\n          /\n          </span>\n          <span\n            class=\"flexrow-item time-indicator\"\n            :title=\"$t('playlists.actions.max_duration')\"\n          >\n            {{ maxDuration }}\n          </span>\n          <span\n            class=\"flexrow-item time-indicator mr1\"\n            :title=\"$t('playlists.actions.frame_number')\"\n          >\n            ({{ currentFrame }} / {{ (nbFrames + '').padStart(3, '0') }})\n          </span>\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            @click=\"onPreviousFrameClicked\"\n            :title=\"$t('playlists.actions.previous_frame')\"\n            icon=\"left\"\n          />\n          <button-simple\n            class=\"button player-button flexrow-item\"\n            @click=\"onNextFrameClicked\"\n            :title=\"$t('playlists.actions.next_frame')\"\n            icon=\"right\"\n          />\n        </div>\n        <span class=\"filler\"></span>\n\n        <div\n          class=\"flexrow\"\n          v-if=\"!isCurrentUserArtist && (isCurrentPreviewMovie || isCurrentPreviewPicture)\"\n        >\n          <button-simple\n            class=\"player-button flexrow-item\"\n            icon=\"undo\"\n            :title=\"$t('playlists.actions.annotation_undo')\"\n            @click=\"undoLastAction\"\n          />\n\n          <button-simple\n            class=\"player-button flexrow-item\"\n            :title=\"$t('playlists.actions.annotation_redo')\"\n            icon=\"redo\"\n            @click=\"redoLastAction\"\n          />\n\n          <transition name=\"slide\">\n            <div\n              class=\"annotation-tools\"\n              v-show=\"isTyping\"\n            >\n              <color-picker\n                :isOpen=\"isShowingPalette\"\n                :color=\"this.textColor\"\n                @TogglePalette=\"onPickColor\"\n                @change=\"onChangeTextColor\"\n              />\n            </div>\n          </transition>\n          <button-simple\n            :class=\"{\n              'player-button': true,\n              'flexrow-item': true,\n              active: isTyping\n            }\"\n            :title=\"$t('playlists.actions.annotation_text')\"\n            @click=\"onTypeClicked\"\n            icon=\"type\"\n          />\n\n          <transition name=\"slide\">\n            <div\n              class=\"annotation-tools\"\n              v-show=\"isDrawing\"\n            >\n              <pencil-picker\n                :isOpen=\"isShowingPencilPalette\"\n                :pencil=\"pencil\"\n                :sizes=\"this.pencilPalette\"\n                @toggle-palette=\"onPickPencil\"\n                @change=\"onChangePencil\"\n              />\n\n              <color-picker\n                :isOpen=\"isShowingPalette\"\n                :color=\"this.color\"\n                @TogglePalette=\"onPickColor\"\n                @change=\"onChangeColor\"\n              />\n            </div>\n          </transition>\n          <button-simple\n            :class=\"{\n              'player-button': true,\n              'flexrow-item': true,\n              active: isDrawing\n            }\"\n            :title=\"$t('playlists.actions.annotation_draw')\"\n            @click=\"onAnnotateClicked\"\n            icon=\"pencil\"\n          />\n          <button-simple\n            class=\"player-button flexrow-item\"\n            icon=\"remove\"\n            :title=\"$t('playlists.actions.annotation_delete')\"\n            @click=\"onDeleteClicked\"\n          />\n        </div>\n        <div class=\"separator\"></div>\n        <button-simple\n          class=\"button player-button flexrow-item\"\n          :title=\"$t('playlists.actions.comments')\"\n          @click=\"onCommentClicked\"\n          icon=\"comment\"\n        />\n        <button-simple\n          class=\"player-button flexrow-item\"\n          :title=\"$t('playlists.actions.' + (isHd ? 'switch_ld' : 'switch_hd'))\"\n          :text=\"isHd ? 'HD' : 'LD'\"\n          @click=\"isHd = !isHd\"\n          v-if=\"isCurrentPreviewMovie\"\n        />\n\n        <button-simple\n          class=\"button player-button flexrow-item\"\n          :title=\"$t('playlists.actions.fullscreen')\"\n          @click=\"onFullscreenClicked\"\n          icon=\"maximize\"\n          v-if=\"isFullScreenEnabled\"\n        />\n      </div>\n\n    </div>\n\n    <div\n      class=\"edit-data block\"\n    >\n      <div class=\"flexrow\">\n        <combobox-styled\n          class=\"section-combo flexrow-item\"\n          :options=\"entityNavOptions\"\n          v-model=\"currentSection\"\n        />\n        <div class=\"filler\"></div>\n        <span\n          class=\"flexrow-item mt05\"\n          v-show=\"currentSection === 'schedule'\"\n        >\n          {{ $t('schedule.zoom_level') }}:\n        </span>\n        <combobox-number\n          class=\"zoom-level flexrow-item \"\n          :options=\"zoomOptions\"\n          is-simple\n          v-model=\"zoomLevel\"\n          v-show=\"currentSection === 'schedule'\"\n        />\n      </div>\n\n      <div\n        ref=\"info-row\"\n        class=\"infos flexrow pa0\"\n        v-if=\"currentSection === 'infos'\"\n      >\n        <div class=\"flexrow-item\">\n          <div class=\"flexrow\">\n            <div class=\"flexcolumn flexrow-item\">\n              <page-subtitle class=\"flerow-item\" :text=\"$t('edits.tasks')\" />\n              <entity-task-list\n                class=\"task-list flexrow-item\"\n                :entries=\"currentEdit ? currentEdit.tasks : []\"\n                :is-loading=\"!currentEdit\"\n                :is-error=\"false\"\n              />\n            </div>\n\n            <div class=\"flexcolumn flexrow-item\">\n              <div class=\"flexrow\">\n                <page-subtitle class=\"flerow-item\" :text=\"$t('main.info')\" />\n                <div class=\"flexrow-item has-text-right\">\n                  <button-simple\n                    icon=\"edit\"\n                    @click=\"modals.edit = true\"\n                    v-if=\"isCurrentUserManager\"\n                  />\n                </div>\n              </div>\n              <div class=\"table-body edit-metadata flexrow-item\">\n                <table class=\"datatable no-header\" v-if=\"currentEdit\">\n                  <tbody class=\"datatable-body\">\n                    <tr class=\"datatable-row\">\n                      <td class=\"field-label\">{{ $t('edits.fields.description') }}</td>\n                      <description-cell\n                        :entry=\"currentEdit\"\n                        :full=\"true\"\n                      />\n                    </tr>\n                    <tr\n                      :key=\"descriptor.id\"\n                      class=\"datatable-row\"\n                      v-for=\"descriptor in editMetadataDescriptors\"\n                    >\n                      <td class=\"field-label\">{{ descriptor.name }}</td>\n                      <td>\n                        {{ currentEdit.data ? currentEdit.data[descriptor.field_name] : '' }}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        ref=\"schedule-row\"\n        class=\"infos schedule\"\n        v-if=\"currentSection === 'schedule' && scheduleItems.length > 0\"\n      >\n        <div\n          class=\"schedule mt1\"\n          v-if=\"scheduleItems[0].children.length > 0\"\n          v-show=\"currentSection === 'schedule'\"\n        >\n          <div class=\"wrapper\">\n            <schedule\n              ref=\"schedule-widget\"\n              :start-date=\"tasksStartDate\"\n              :end-date=\"tasksEndDate\"\n              :hierarchy=\"scheduleItems\"\n              :zoom-level=\"zoomLevel\"\n              :is-loading=\"false\"\n              :is-estimation-linked=\"true\"\n              :hide-root=\"true\"\n              :with-milestones=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <entity-preview-files\n        :entity=\"currentEdit\"\n        v-if=\"currentSection === 'preview-files'\"\n      />\n\n      <entity-news\n        :entity=\"currentEdit\"\n        v-if=\"currentSection === 'activity'\"\n      />\n\n      <entity-time-logs\n        :entity=\"currentEdit\"\n        v-if=\"currentSection === 'time-logs'\"\n      />\n\n    </div>\n  </div>\n\n  <edit-edit-modal\n    ref=\"edit-edit-modal\"\n    :active=\"modals.edit\"\n    :is-loading=\"isLoading\"\n    :is-error=\"errors.edit\"\n    :edit-to-edit=\"currentEdit\"\n    @cancel=\"modals.edit = false\"\n    @confirm=\"confirmEditEdit\"\n  />\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { CornerLeftUpIcon, DownloadIcon } from 'vue-feather-icons'\n\nimport { annotationMixin } from '@/components/mixins/annotation'\nimport { domMixin } from '@/components/mixins/dom'\nimport { entityMixin } from '@/components/mixins/entity'\nimport { getEntitiesPath } from '@/lib/path'\nimport { formatListMixin } from '@/components/mixins/format'\nimport { previewRoomMixin } from '@/components/mixins/previewRoom'\nimport { playerMixin } from '@/components/mixins/player'\nimport { DEFAULT_NB_FRAMES_PICTURE } from '@/lib/playlist'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber'\nimport DescriptionCell from '@/components/cells/DescriptionCell'\nimport EditEditModal from '@/components/modals/EditEditModal'\nimport EntityNews from '@/components/pages/entities/EntityNews'\nimport EntityPreviewFiles from '@/components/pages/entities/EntityPreviewFiles'\nimport EntityTaskList from '@/components/lists/EntityTaskList'\nimport EntityTimeLogs from '@/components/pages/entities/EntityTimeLogs'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport ColorPicker from '@/components/widgets/ColorPicker'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport PencilPicker from '@/components/widgets/PencilPicker'\nimport PreviewRoom from '@/components/widgets/PreviewRoom'\nimport PreviewsPerTaskType from '@/components/previews/PreviewsPerTaskType'\nimport RawVideoPlayer from '@/components/pages/playlists/RawVideoPlayer'\nimport Schedule from '@/components/pages/schedule/Schedule'\nimport Spinner from '@/components/widgets/Spinner'\nimport TaskInfo from '@/components/sides/TaskInfo'\nimport VideoProgress from '@/components/previews/VideoProgress'\n\nexport default {\n  name: 'edit',\n  mixins: [\n    annotationMixin,\n    domMixin,\n    entityMixin,\n    formatListMixin,\n    previewRoomMixin,\n    playerMixin\n  ],\n  components: {\n    ButtonSimple,\n    CornerLeftUpIcon,\n    ColorPicker,\n    ComboboxStyled,\n    ComboboxNumber,\n    DescriptionCell,\n    DownloadIcon,\n    EditEditModal,\n    EntityNews,\n    EntityPreviewFiles,\n    EntityTaskList,\n    EntityTimeLogs,\n    EntityThumbnail,\n    PageSubtitle,\n    PencilPicker,\n    PreviewRoom,\n    PreviewsPerTaskType,\n    RawVideoPlayer,\n    Schedule,\n    Spinner,\n    TaskInfo,\n    VideoProgress\n  },\n\n  data () {\n    return {\n      currentEdit: null,\n      currentSection: 'infos',\n      isLoading: true,\n      isError: false,\n      previewRoomRef: 'edits-preview-room',\n      previewFileMap: new Map(),\n      tempMode: false,\n      errors: {\n        edit: false\n      },\n      entityNavOptions: [\n        { label: 'Infos', value: 'infos' },\n        { label: 'Schedule', value: 'schedule' },\n        { label: 'Preview Files', value: 'preview-files' },\n        { label: 'Activity', value: 'activity' },\n        { label: 'Timelog', value: 'time-logs' }\n      ],\n      modals: {\n        edit: false\n      }\n    }\n  },\n\n  mounted () {\n    this.resetData()\n    this.$on('annotation-changed', this.onAnnotationChanged)\n\n    this.$options.scrubbing = false\n    this.isHd = this.organisation\n      ? this.organisation.hd_by_default === 'true'\n      : false\n    if (this.picturePlayer) {\n      this.picturePlayer.addEventListener('load', async () => {\n        const wasPlaying = this.isPlaying\n        await this.resetPictureCanvas()\n        this.isPlaying = wasPlaying\n      })\n    }\n    this.$nextTick(() => {\n      this.configureEvents()\n      this.setupFabricCanvas()\n      this.setPlayerSpeed(1)\n      this.onFrameUpdate(1)\n    })\n  },\n\n  beforeDestroy () {\n    this.$off('annotation-changed', this.onAnnotationChanged)\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'getTaskPreviews',\n      'getTaskTypePriority',\n      'isCurrentUserManager',\n      'isTVShow',\n      'route',\n      'editMap',\n      'editMetadataDescriptors',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    title () {\n      if (this.currentEdit) {\n        if (this.currentEdit.episode_name) {\n          return `${this.currentEdit.episode_name} / ` +\n                 `${this.currentEdit.name}`\n        } else {\n          return `${this.currentEdit.name}`\n        }\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    editsPath () {\n      return getEntitiesPath(\n        this.currentProduction.id,\n        'edits',\n        this.currentEpisode ? this.currentEpisode.id : this.currentEpisode\n      )\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'editEdit',\n      'loadEdits',\n      'loadTaskEntityPreviewFiles',\n      'updatePreviewAnnotation'\n    ]),\n\n    resetPreviewFileMap () {\n      this.previewFileMap.clear()\n      if (this.previewFiles) {\n        Object.values(this.previewFiles).forEach(previewFiles => {\n          previewFiles.forEach(previewFile => {\n            this.previewFileMap.set(previewFile.id, previewFile)\n          })\n        })\n      }\n    },\n\n    resetHeight () {\n      this.$nextTick(() => {\n        let height = window.innerHeight\n        height -= this.$refs.header ? this.$refs.header.offsetHeight : 0\n        if (this.$refs['button-bar']) {\n          height -= this.$refs['button-bar'].offsetHeight\n        }\n        if (this.$refs['video-progress']) {\n          height -= this.$refs['video-progress'].$el.offsetHeight\n        }\n        if (this.$refs['info-row']) {\n          height -= this.$refs['info-row'].offsetHeight\n        }\n        if (this.$refs['schedule-row']) {\n          height -= this.$refs['schedule-row'].offsetHeight\n        }\n        if (this.$refs['page-header-row']) {\n          height -= this.$refs['page-header-row'].offsetHeight\n        }\n        height = Math.min(window.innerHeight * 0.4, Math.max(480, height))\n        if (this.$refs['video-container']) {\n          this.$refs['video-container'].style.height = `${height}px`\n        }\n        if (!this.isCommentsHidden && this.$refs['task-info']) {\n          this.$refs['task-info'].$el.style.height = `${height}px`\n        }\n        if (this.rawPlayer) this.rawPlayer.resetHeight(height)\n        this.$nextTick(() => {\n          this.resetCanvas()\n          this.updateProgressBar()\n        })\n      })\n    },\n\n    initPlayer () {\n      if (!this.currentEdit) return\n\n      this.currentPreviewIndex = 0\n      // There's only one entity in this player, which is current Edit entity,\n      // so playingEntityIndex is always 0\n      this.playingEntityIndex = 0\n      this.entityList = [{ ...this.currentEdit, preview_file_id: null, preview_files: this.previewFiles }]\n      this.framesPerImage[0] = this.currentEdit.preview_nb_frames || DEFAULT_NB_FRAMES_PICTURE\n      this.pause()\n      if (this.rawPlayer) this.rawPlayer.setCurrentFrame(1)\n      this.currentTimeRaw = 0\n      this.updateProgressBar()\n      this.updateTaskPanel()\n      this.clearCanvas()\n      this.annotations = []\n      this.resetHeight()\n      this.resetCanvas()\n        .then(() => {\n          if (this.isCurrentPreview) {\n            this.annotations = this.currentEntity.preview_file_annotations\n            this.loadAnnotation(this.getAnnotation(0))\n          }\n        })\n    },\n\n    getCurrentEdit () {\n      return this.editMap.get(this.route.params.edit_id) || null\n    },\n\n    confirmEditEdit (form) {\n      form.id = this.currentEdit.id\n      this.isLoading = true\n      this.errors.edit = false\n      this.editEdit(form)\n        .then(() => {\n          this.isLoading = false\n          this.modals.edit = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.isLoading = false\n          this.errors.edit = true\n        })\n    },\n\n    setPreviewFile (previewFile) {\n      this.playingPreviewFileId = previewFile.id\n\n      this.currentEntity.preview_file_id = previewFile.id\n      this.currentEntity.preview_file_task_id = previewFile.task_id\n      this.currentEntity.preview_file_extension = previewFile.extension\n      this.currentEntity.preview_file_annotations = previewFile.annotations || []\n      this.currentEntity.preview_file_previews = previewFile.previews\n\n      this.annotations = this.currentEntity.preview_file_annotations\n\n      if (this.rawPlayer) this.rawPlayer.reloadCurrentEntity()\n      this.clearCanvas()\n      this.updateTaskPanel()\n      this.updateProgressBar()\n    },\n\n    onPreviewChanged (entity, previewFile) {\n      this.pause()\n      if (!previewFile) {\n        // TODO: handle the situation when now preview file is selected\n        // (e.g. if selected task has none)\n      }\n      const isDifferentPreviewFile = this.playingPreviewFileId !== previewFile.id\n      this.setPreviewFile(previewFile)\n      if (isDifferentPreviewFile) this.sendUpdatePlayingStatus()\n    },\n\n    onAnnotationChanged ({ preview, additions, deletions, updates }) {\n      const taskId = preview.task_id\n      this.updatePreviewAnnotation({\n        taskId, preview, additions, deletions, updates\n      })\n    },\n\n    scrollToEntity () {\n      // This method in unused here, required by PlaylistPlayer that shares\n      // playerMixin.\n    },\n\n    resetData () {\n      this.$nextTick(() => {\n        this.loadEdits()\n          .then(() => {\n            this.currentEdit = this.getCurrentEdit()\n            if (!this.currentEdit) {\n              return\n            }\n            this.loadTaskEntityPreviewFiles(this.currentEdit.id).then((previewFiles) => {\n              this.previewFiles = previewFiles\n              this.resetPreviewFileMap()\n              this.initPlayer()\n              this.isLoading = false\n            })\n          })\n      })\n    },\n\n    onPreviewFilesUpdate () {\n      this.loadTaskEntityPreviewFiles(this.currentEdit.id).then((previewFiles) => {\n        this.previewFiles = previewFiles\n        this.currentEntity.preview_files = previewFiles\n        this.resetPreviewFileMap()\n        // FIXME: combo should continue displaying currently selected task preview\n        // unless it's no longer available (e.g. was deleted along with the comment)\n        if (this.currentEntity &&\n          this.currentEntity.preview_file_id &&\n          !this.previewFileMap.has(this.currentEntity.preview_file_id)) {\n          // TODO: handle deletion of currently displayed preview file\n        }\n      })\n    }\n  },\n\n  watch: { // Needed when reloading the page with F5\n    currentProduction () {\n      if (!this.isTVShow) this.resetData()\n    },\n\n    currentEpisode () {\n      if (this.isTVShow && this.editMap.size === 0) {\n        this.resetData()\n      }\n    },\n\n    playingPreviewFileId () {\n      // In case preview was switched by someone else in the room,\n      // make sure that comboboxes reflect this change too.\n      if (!this.currentEntity || !this.playingPreviewFileId) return\n\n      const previewsCombo = this.$refs['previews-per-task-type']\n      if (!previewsCombo) return\n\n      const previews = this.currentEntity.preview_files\n      for (const taskTypeId in previews) {\n        const previewFile = previews[taskTypeId].find(p => p.id === this.playingPreviewFileId)\n        if (previewFile) {\n          this.setPreviewFile(previewFile)\n          if (\n            previewsCombo.taskTypeId !== taskTypeId ||\n            previewsCombo.previewFileId !== this.playingPreviewFileId\n          ) {\n            previewsCombo.taskTypeId = taskTypeId\n            previewsCombo.previewFileId = this.playingPreviewFileId\n          }\n          break\n        }\n      }\n    }\n  },\n\n  socket: {\n    events: {\n      ...previewRoomMixin.socket.events,\n      ...playerMixin.socket.events,\n\n      'preview-file:add-file' (eventData) {\n        if (eventData.project_id !== this.task.project_id) return\n        const taskId = eventData.task_id\n\n        const previews = this.currentEntity.preview_files\n        for (const taskTypeId in previews) {\n          const previewFile = previews[taskTypeId].find(p => p.task_id === taskId)\n          if (previewFile) {\n            // Added preview affects one of the tasks, preview files must be refreshed\n            this.onPreviewFilesUpdate()\n            break\n          }\n        }\n      },\n\n      'comment:delete' (eventData) {\n        // Deleting a comment might remove a task preview, preview files must be refreshed\n        if (eventData.project_id !== this.task.project_id) return\n        this.onPreviewFilesUpdate()\n      }\n    }\n  },\n\n  metaInfo () {\n    return {\n      title: `${this.title} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .page {\n  background: $dark-grey-light;\n  height: 100%;\n  padding-bottom: 1em;\n}\n\n.dark .wrapper {\n  background: $dark-grey-2;\n}\n\n.block {\n  margin: 0;\n}\n\n.entity-title {\n  font-weight: bold;\n}\n\n.entity-thumbnail {\n  margin-bottom: 0;\n}\n\n.main-block {\n  padding: .5em 1.5em;\n}\n\n.edit-data {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  margin: 0 1em 0 1em;\n  overflow: hidden;\n  min-height: 300px;\n}\n\n.edit-metadata {\n  width: 100%;\n}\n\nh2.subtitle {\n  border-bottom: 0;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n  font-size: 1.5em;\n}\n\n.page {\n  background: #F9F9F9;\n  padding: 0em;\n}\n\n.page-header {\n  margin-top: calc(50px + 2em);\n  margin-left: 1em;\n  margin-right: 1em;\n}\n\n.infos {\n  margin-top: 1em;\n\n  .flexrow-item {\n    align-self: flex-start;\n    flex: 1;\n  }\n}\n\n.edit-thumbnail {\n  max-width: 100px;\n}\n\n.field-label {\n  font-weight: bold;\n  width: 140px;\n}\n\n.data-list {\n  max-width: 100%;\n}\n\n.page-header .thumbnail-picture {\n  margin: 0 1em 0 0;\n  max-width: 80px;\n}\n\n.back-link {\n  padding-top: 3px;\n}\n\n.task-list {\n  width: 100%;\n}\n\n.datatable-row {\n  user-select: text;\n}\n\n.schedule {\n  position: relative;\n  height: 300px;\n  padding: 10px;\n\n  .schedule-title {\n    margin-bottom: 5px;\n  }\n\n  .wrapper {\n    height: 230px;\n    border-radius: 10px;\n  }\n}\n\n.column.main-column {\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\n@media screen and (max-width: 768px) {\n  .task-column {\n    margin-bottom: 1em;\n  }\n\n  .column:first-child {\n    margin-right: 0;\n  }\n\n  .entity-title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n}\n\n/* Player styles */\n\n.full-height {\n  height: 100%;\n}\n\n.player {\n  margin: 1em;\n\n  .player-button {\n    background: $white-grey;\n    margin: 0;\n    border: 0;\n    border-radius: 0;\n\n    &.active {\n      color: $green;\n    }\n\n    &.topbar-button {\n      border-radius: 10px;\n      margin-right: 0.5em;\n    }\n  }\n}\n\n.dark .player {\n  background: $dark-grey;\n\n  .player-button {\n    background: $dark-grey-light;\n    color: $white-grey;\n\n    &:hover {\n      background: $dark-grey-lighter;\n    }\n\n    &.active {\n      color: $green;\n    }\n\n    &.topbar-button {\n      border: 1px solid $dark-grey-strong;\n    }\n  }\n}\n\n.player-footer {\n  background: $white-grey;\n}\n\n.dark .player-footer {\n  background: $dark-grey-light;\n  color: $white-grey;\n}\n\n.loading-background {\n  width: 100%;\n  height: 100%;\n  background: black;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n\n.spinner {\n  margin: auto;\n}\n\n.task-info-column {\n  min-width: 450px;\n  max-width: 450px;\n  overflow-y: auto;\n}\n\n.icon {\n  margin-top: -4px;\n  height: 20px;\n}\n\n.smaller {\n  height: 16px;\n}\n\n.right {\n  margin-left: auto;\n}\n\n.video-player {\n  display: flex;\n  flex-direction: column;\n  align-content: flex-end;\n  height: 100%;\n}\n\n.video-wrapper {\n  flex: 1;\n  display: flex;\n  background: black;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: auto;\n  width: 100%;\n}\n\n.annotation-movie {\n  margin: auto;\n  width: 100%;\n}\n\n.dark .time-indicator {\n  color: $light-grey;\n  padding-left: 0.8em;\n  margin-right: 0;\n}\n\n.video-container {\n  position: relative;\n  margin: auto;\n  min-height: 480px;\n}\n\n.canvas-wrapper {\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.buttons {\n  height: 32px;\n}\n\nprogress::-moz-progress-bar {\n  background-color: #43B581;\n}\n\nprogress::-webkit-progress-value {\n  background-color: #43B581;\n}\n\nprogress {\n  width: 100%;\n  border-radius: 0;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  background: $grey;\n  height: 8px;\n  display: block;\n}\n\n.progress span#progress-bar {\n  width: 100%;\n  border-radius: 0;\n  margin: 0;\n  padding: 0;\n  background-color: #43B581;\n}\n\n.mr1 {\n  margin-right: 1em;\n}\n\n.mr0 {\n  margin-right: 0;\n}\n\n.video-progress {\n  transition: opacity 0.5s ease\n}\n\n.spinner {\n  margin-top: 80px;\n  margin-left: 1em;\n}\n\n.annotation-tools {\n  display: flex;\n  align-items: stretch;\n  height: 100%;\n}\n\n.slide-enter-active {\n  transition: all .3s ease;\n}\n.slide-leave-active {\n  transition: all .3s ease;\n}\n.slide-enter, .slide-leave-to {\n  transform: translateX(100%);\n}\n\n.for-client {\n  background: $dark-purple-strong;\n  border: 2px solid $dark-purple-strong;\n  color: $white;\n  padding: 0.3em;\n  margin-left: 1em;\n  margin-right: 0;\n  border-radius: 5px;\n}\n\n#edit-annotation-canvas {\n  margin: auto;\n}\n\n.picture-preview-wrapper {\n  display: flex;\n  height: inherit;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n}\n\n.picture-preview {\n  max-height: 100%;\n  max-width: 100%;\n  color: var(--text);\n}\n\n.raw-player {\n  margin: auto;\n}\n\n.disabled {\n  color: $grey-strong;\n}\n\n.loading-wrapper {\n  width: 100%;\n}\n\n.disabled {\n  color: $grey;\n}\n\n.dark .frame-per-image-input {\n  padding: 2px;\n  margin-left: 3px;\n  background-color: $dark-grey-2;\n  border: 1px solid $dark-grey-stronger;\n  color: white;\n  width: 3rem;\n}\n</style>\n"],"names":["_sfc_main","ComboboxStyled","ValidationTag","mapGetters","taskId","task","firstBy","taskType","previewFile","entity","taskTypeIds","previewFileId","taskTypeId","previewFiles","annotationMixin","domMixin","entityMixin","formatListMixin","previewRoomMixin","playerMixin","ButtonSimple","CornerLeftUpIcon","ColorPicker","ComboboxNumber","DescriptionCell","DownloadIcon","EditEditModal","EntityNews","EntityPreviewFiles","EntityTaskList","EntityTimeLogs","EntityThumbnail","PageSubtitle","PencilPicker","PreviewRoom","PreviewsPerTaskType","RawVideoPlayer","Schedule","Spinner","TaskInfo","VideoProgress","wasPlaying","getEntitiesPath","mapActions","height","DEFAULT_NB_FRAMES_PICTURE","form","err","isDifferentPreviewFile","preview","additions","deletions","updates","previewsCombo","previews","p","eventData"],"mappings":"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"}