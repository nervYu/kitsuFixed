{"version":3,"file":"Asset-086a9c4a.js","sources":["../../src/components/pages/Asset.vue"],"sourcesContent":["<template>\n<div class=\"columns fixed-page asset xyz-in\" xyz=\"fade\">\n  <div class=\"page column main-column\">\n    <div class=\"page-header flexrow\">\n      <!--router-link\n        class=\"flexrow-item has-text-centered back-link ml1\"\n        :to=\"previousAssetPath\"\n      >\n        <chevron-left-icon />\n      </router-link>\n      <router-link\n        class=\"flexrow-item has-text-centered back-link\"\n        :to=\"nextAssetPath\"\n      >\n        <chevron-right-icon />\n      </router-link-->\n      <router-link\n        class=\"flexrow-item has-text-centered back-link ml1\"\n        :to=\"assetsPath\"\n      >\n        <corner-left-up-icon />\n      </router-link>\n      <span\n        class=\"flexrow-item ml2\"\n      >\n        <entity-thumbnail\n          class=\"entity-thumbnail\"\n          :entity=\"currentAsset\"\n          :empty-width=\"100\"\n          :empty-height=\"60\"\n          :width=\"100\"\n          v-if=\"currentAsset\"\n        />\n      </span>\n      <div class=\"entity-title flexrow-item\">\n        {{ title }}\n      </div>\n      <div class=\"filler\">\n      </div>\n      <div\n        class=\"ready-for flexrow block mr0\"\n        v-if=\"\n          currentAsset\n          && currentAsset.ready_for\n          && currentAsset.ready_for !== 'None'\"\n      >\n        <span class=\"flexrow-item\">\n          {{ $t('assets.fields.ready_for') }}\n        </span>\n        <task-type-name\n          class=\"flexrow-item\"\n          :task-type=\"taskTypeMap.get(currentAsset.ready_for)\"\n          :current-production-id=\"this.currentProduction.id\"\n        />\n      </div>\n    </div>\n\n    <div class=\"flexrow infos\">\n      <div class=\"flexrow-item block flexcolumn\">\n        <page-subtitle :text=\"$t('assets.tasks')\" />\n        <entity-task-list\n          class=\"task-list\"\n          :entries=\"currentAsset ? currentAsset.tasks : []\"\n          :is-loading=\"!currentAsset\"\n          :is-error=\"false\"\n          @task-selected=\"onTaskSelected\"\n        />\n      </div>\n      <div class=\"flexrow-item block flexcolumn\">\n        <div class=\"flexrow\">\n          <page-subtitle\n            :text=\"$t('main.info')\"\n          />\n          <div class=\"filler\">\n          </div>\n          <div class=\"flexrow-item has-text-right\">\n            <button-simple\n              icon=\"edit\"\n              @click=\"modals.edit = true\"\n              v-if=\"isCurrentUserManager\"\n            />\n          </div>\n        </div>\n\n        <div class=\"table-body\">\n          <table class=\"datatable no-header\" v-if=\"currentAsset\">\n            <tbody class=\"table-body\">\n              <tr\n                class=\"datatable-row\"\n              >\n                <td class=\"field-label\">{{ $t('assets.fields.description') }}</td>\n                <description-cell\n                  :entry=\"currentAsset\"\n                  :full=\"true\"\n                />\n              </tr>\n              <tr\n                :key=\"descriptor.id\"\n                class=\"datatable-row\"\n                v-for=\"descriptor in assetMetadataDescriptors\"\n              >\n                <td class=\"field-label\">{{ descriptor.name }}</td>\n                <td>\n                  {{\n                    currentAsset.data\n                      ? currentAsset.data[descriptor.field_name]\n                      : ''\n                  }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div\n      class=\"asset-data block\"\n    >\n      <div class=\"flexrow\">\n        <combobox-styled\n          class=\"section-combo flexrow-item\"\n          :options=\"entityNavOptions\"\n          v-model=\"currentSection\"\n        />\n        <span\n          class=\"tag tag-standby\"\n          v-show=\"currentSection === 'casting' && currentAsset.is_casting_standby\"\n        >\n          {{ $t('breakdown.fields.standby') }}\n        </span>\n        <div class=\"filler\"></div>\n        <span\n          class=\"flexrow-item mt05\"\n          v-show=\"currentSection === 'schedule'\"\n        >\n          {{ $t('schedule.zoom_level') }}:\n        </span>\n        <combobox-number\n          class=\"zoom-level flexrow-item \"\n          :options=\"zoomOptions\"\n          is-simple\n          v-model=\"zoomLevel\"\n          v-show=\"currentSection === 'schedule'\"\n        />\n      </div>\n\n      <div\n        class=\"asset-casted-in\"\n        v-show=\"currentSection === 'casting'\"\n      >\n        <div v-if=\"currentAsset\">\n          <div\n            v-if=\"currentAsset.castInShotsBySequence &&\n                  currentAsset.castInShotsBySequence[0].length > 0\"\n          >\n            <div\n              class=\"sequence-shots\"\n              :key=\"sequenceShots.length > 0 ? sequenceShots[0].sequence_name : ''\"\n              v-if=\"sequenceShots[0].sequence_name\"\n              v-for=\"sequenceShots in currentAsset.castInShotsBySequence\"\n            >\n              <div class=\"shot-sequence\">\n                {{ sequenceShots.length > 0 ? sequenceShots[0].sequence_name : '' }}\n              </div>\n              <div class=\"shot-list\">\n                <router-link\n                  class=\"shot-link\"\n                  :key=\"shot.shot_id\"\n                  :to=\"shotPath(shot)\"\n                  v-for=\"shot in sequenceShots\"\n                >\n                  <entity-thumbnail\n                    class=\"entity-thumbnail\"\n                    :entity=\"shot\"\n                    :square=\"true\"\n                    :empty-width=\"103\"\n                    :empty-height=\"103\"\n                    :with-link=\"false\"\n                  />\n                  <div>\n                    <span>{{ shot.shot_name }}</span>\n                    <span v-if=\"shot.nb_occurences > 1\">\n                      ({{ shot.nb_occurences }})\n                    </span>\n                  </div>\n                </router-link>\n              </div>\n            </div>\n          </div>\n          <div v-else>\n            {{ $t('assets.no_cast_in') }}\n          </div>\n        </div>\n          <table-info\n          :is-loading=\"castIn.isLoadin\"\n          :is-error=\"castIn.isError\"\n          v-else\n        />\n\n        <div\n          v-if=\"currentAsset &&\n                currentAsset.castingAssetsByType &&\n                currentAsset.castingAssetsByType[0].length > 0\"\n        >\n          <page-subtitle text=\"Linked\" />\n          <div\n              v-if=\"currentAsset.castingAssetsByType && currentAsset.castingAssetsByType[0].length > 0\"\n          >\n            <div\n              class=\"type-assets\"\n              :key=\"typeAssets.length > 0 ? typeAssets[0].asset_type_name : ''\"\n              v-for=\"typeAssets in currentAsset.castingAssetsByType\"\n            >\n              <div class=\"asset-type\">\n                {{ typeAssets.length > 0 ? typeAssets[0].asset_type_name : '' }}\n                ({{ typeAssets.length }})\n              </div>\n              <div class=\"asset-list\">\n                <router-link\n                  class=\"asset-link\"\n                  :key=\"asset.id\"\n                  :to=\"{\n                    name: 'asset',\n                    params: {\n                      production_id: currentProduction.id,\n                      asset_id: asset.asset_id\n                    }\n                  }\"\n                  v-for=\"asset in typeAssets\"\n                >\n                  <entity-thumbnail\n                    class=\"entity-thumbnail\"\n                    :entity=\"asset\"\n                    :square=\"true\"\n                    :empty-width=\"103\"\n                    :empty-height=\"103\"\n                    :with-link=\"false\"\n                  />\n                  <div>\n                    <span>{{ asset.asset_name }}</span>\n                    <span v-if=\"asset.nb_occurences > 1\">\n                      ({{ asset.nb_occurences }})\n                    </span>\n                  </div>\n                </router-link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        class=\"schedule mt1\"\n        v-if=\"scheduleItems[0].children.length > 0\"\n        v-show=\"currentSection === 'schedule'\"\n       >\n        <div class=\"wrapper\">\n          <schedule\n            ref=\"schedule-widget\"\n            :start-date=\"tasksStartDate\"\n            :end-date=\"tasksEndDate\"\n            :hierarchy=\"scheduleItems\"\n            :zoom-level=\"zoomLevel\"\n            :is-loading=\"false\"\n            :is-estimation-linked=\"true\"\n            :hide-root=\"true\"\n            :with-milestones=\"false\"\n          />\n        </div>\n      </div>\n\n      <entity-preview-files\n        :entity=\"currentAsset\"\n        v-if=\"currentSection === 'preview-files'\"\n      />\n\n      <entity-news\n        :entity=\"currentAsset\"\n        v-if=\"currentSection === 'activity'\"\n      />\n\n      <entity-time-logs\n        :entity=\"currentAsset\"\n        v-if=\"currentSection === 'time-logs'\"\n      />\n\n    </div>\n  </div>\n\n  <div\n    class=\"column side-column\"\n    v-if=\"currentTask\"\n  >\n    <task-info\n      :task=\"currentTask\"\n    />\n  </div>\n\n  <edit-asset-modal\n    ref=\"edit-asset-modal\"\n    :active=\"modals.edit\"\n    :is-loading=\"loading.edit\"\n    :is-error=\"errors.edit\"\n    :asset-to-edit=\"currentAsset\"\n    @cancel=\"modals.edit = false\"\n    @confirm=\"confirmEditAsset\"\n  />\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { entityMixin } from '@/components/mixins/entity'\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport {\n  CornerLeftUpIcon\n} from 'vue-feather-icons'\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled'\nimport DescriptionCell from '@/components/cells/DescriptionCell'\nimport EditAssetModal from '@/components/modals/EditAssetModal'\nimport EntityNews from '@/components/pages/entities/EntityNews'\nimport EntityPreviewFiles from '@/components/pages/entities/EntityPreviewFiles'\nimport EntityTimeLogs from '@/components/pages/entities/EntityTimeLogs'\nimport EntityTaskList from '@/components/lists/EntityTaskList'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport Schedule from '@/components/pages/schedule/Schedule'\nimport TableInfo from '@/components/widgets/TableInfo'\nimport TaskTypeName from '@/components/widgets/TaskTypeName'\nimport TaskInfo from '@/components/sides/TaskInfo'\n\nexport default {\n  name: 'asset',\n  mixins: [entityMixin, formatListMixin],\n  components: {\n    ButtonSimple,\n    ComboboxNumber,\n    CornerLeftUpIcon,\n    ComboboxStyled,\n    DescriptionCell,\n    EditAssetModal,\n    EntityNews,\n    EntityPreviewFiles,\n    EntityThumbnail,\n    EntityTaskList,\n    EntityTimeLogs,\n    PageSubtitle,\n    Schedule,\n    TableInfo,\n    TaskInfo,\n    TaskTypeName\n  },\n\n  data () {\n    return {\n      currentAsset: null,\n      currentTask: null,\n      castIn: {\n        isLoading: false,\n        isError: false\n      },\n      errors: {\n        edit: false\n      },\n      loading: {\n        edit: false\n      },\n      modals: {\n        edit: false,\n        preview: false\n      }\n    }\n  },\n\n  mounted () {\n    this.clearSelectedTasks()\n    this.init()\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetMap',\n      'assetSearchText',\n      'assetMetadataDescriptors',\n      'currentEpisode',\n      'currentProduction',\n      'getTaskTypePriority',\n      'isTVShow',\n      'isCurrentUserManager',\n      'route',\n      'taskMap',\n      'taskTypeMap',\n      'shotId'\n    ]),\n\n    title () {\n      if (this.currentAsset) {\n        return `${this.currentAsset.asset_type_name} / ` +\n               `${this.currentAsset.name}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    assetThumbnailPath () {\n      const previewId = this.currentAsset.preview_file_id\n      return `/api/pictures/originals/preview-files/${previewId}.png`\n    },\n\n    isPreview () {\n      return this.currentAsset &&\n        this.currentAsset.preview_file_id &&\n        this.currentAsset.preview_file_id.length > 0\n    },\n\n    previousAssetPath () {\n      const assets = Array.from(this.assetMap.values())\n      if (assets.length === 0) return { name: 'open-productions' }\n      const currentIndex = assets.findIndex(asset => {\n        return asset &&\n          this.currentAsset &&\n          asset.id === this.currentAsset.id\n      })\n      const index = currentIndex !== 0 ? currentIndex - 1 : assets.length - 1\n      const asset = assets[index]\n      if (!asset) return { name: 'open-productions' }\n      const route = {\n        name: 'asset',\n        params: {\n          production_id: this.currentProduction.id,\n          asset_id: asset.id\n        },\n        query: {\n          search: ''\n        }\n      }\n      if (this.currentEpisode) {\n        route.name = 'episode-asset'\n        route.params.episode_id = this.currentEpisode.id\n      }\n      return route\n    },\n\n    nextAssetPath () {\n      const assets = Array.from(this.assetMap.values())\n      if (assets.length === 0) return { name: 'open-productions' }\n      const currentIndex = assets.findIndex(asset => {\n        return asset &&\n          this.currentAsset &&\n          asset.id === this.currentAsset.id\n      })\n      const index = currentIndex === assets.length - 1 ? 0 : currentIndex + 1\n      const asset = assets[index]\n      if (!asset) return { name: 'open-productions' }\n      const route = {\n        name: 'asset',\n        params: {\n          production_id: this.currentProduction.id,\n          asset_id: asset.id\n        },\n        query: {\n          search: ''\n        }\n      }\n      if (this.currentEpisode) {\n        route.name = 'episode-asset'\n        route.params.episode_id = this.currentEpisode.id\n      }\n      return route\n    },\n\n    assetsPath () {\n      const route = {\n        name: 'assets',\n        params: {\n          production_id: this.currentProduction.id\n        },\n        query: {\n          search: this.assetSearchText || ''\n        }\n      }\n      if (this.currentEpisode) {\n        route.name = 'episode-assets'\n        route.params.episode_id = this.currentEpisode.id\n      }\n      return route\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'clearSelectedTasks',\n      'editAsset',\n      'loadAsset',\n      'loadAssets',\n      'loadAssetCastIn',\n      'loadAssetCasting',\n      'loadShots',\n      'setCurrentEpisode'\n    ]),\n\n    changeTab (tab) {\n      this.selectedTab = tab\n    },\n\n    getCurrentAsset () {\n      return new Promise((resolve, reject) => {\n        const assetId = this.route.params.asset_id\n        if (!assetId) resolve(null)\n        const asset = this.assetMap.get(assetId) || null\n        if (!asset) {\n          if (assetId) {\n            return this.loadAsset(assetId)\n              .then(resolve)\n          }\n        } else {\n          return resolve(asset)\n        }\n      })\n    },\n\n    onEditClicked () {\n      this.modals.edit = true\n    },\n\n    confirmEditAsset (form) {\n      form.id = this.currentAsset.id\n      this.loading.edit = true\n      this.errors.edit = false\n      this.editAsset(form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    resetData () {\n      this.castIn.isLoading = true\n      if (this.$route.params.episode_id === 'main') {\n        this.setCurrentEpisode('main')\n      }\n      // Next tick is needed to wait for the episode change.\n      this.$nextTick(() => {\n        this.getCurrentAsset()\n          .then(asset => {\n            this.currentAsset = asset\n            return this.loadAssetCastIn(this.currentAsset)\n          })\n          .then(() => this.loadAssetCasting(this.currentAsset))\n          .then(() => {\n            this.castIn.isLoading = false\n          })\n          .catch((err) => {\n            this.castIn.isError = true\n            this.castIn.isLoading = false\n            console.error(err)\n          })\n      })\n    },\n\n    shotPath (shot) {\n      return {\n        name: shot.episode_id ? 'episode-shot' : 'shot',\n        params: {\n          production_id: this.currentProduction.id,\n          shot_id: shot.shot_id,\n          episode_id: shot.episode_id ? shot.episode_id : undefined\n        }\n      }\n    },\n\n    init () {\n      this.getCurrentAsset()\n        .then(asset => {\n          this.currentAsset = asset\n          this.currentSection = this.route.query.section || 'casting'\n          this.castIn.isLoading = true\n          this.castIn.isError = false\n          if (this.currentAsset) {\n            this.loadAssetCastIn(this.currentAsset)\n              .then(() => this.loadAssetCasting(this.currentAsset))\n              .then(() => {\n                this.castIn.isLoading = false\n              })\n              .catch(err => {\n                this.castIn.isLoading = false\n                this.castIn.isError = true\n                console.error(err)\n              })\n          } else {\n            this.resetData()\n          }\n        })\n        .catch(console.error)\n    }\n  },\n\n  watch: {\n    $route () {\n      this.init()\n    }\n  },\n\n  metaInfo () {\n    return {\n      title: `${this.title} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .page {\n    padding-bottom: 1em;\n  }\n\n  .task-list,\n  .table-body {\n    border: 1px solid $dark-grey;\n  }\n\n  .wrapper {\n    background: $dark-grey-2;\n  }\n}\n\n.main-column {\n  display: flex;\n  flex-direction: column;\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\nh2.subtitle {\n  border-bottom: 0;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n  font-size: 1.5em;\n}\n\n.page-header {\n  margin-top: calc(50px + 2em);\n  margin-bottom: 0.8em;\n  margin-left: 1em;\n  margin-right: 1em;\n  .entity-title {\n    font-weight: 500;\n  }\n}\n\n.infos {\n  height: 300px;\n  margin-bottom: 1em;\n  margin-left: 1em;\n  margin-right: 1em;\n\n  .flexrow-item {\n    align-self: flex-start;\n    height: 100%;\n    flex: 1;\n  }\n}\n\n.asset-data {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  margin: 0 1em 0 1em;\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.asset-casting,\n.asset-casted-in {\n  overflow-y: auto;\n  margin-top: 1em;\n}\n\n.thumbnail-picture {\n  margin-bottom: 0.5em;\n}\n\n.sequence-shots {\n  margin-bottom: 3em;\n}\n\n.asset-type,\n.shot-sequence {\n  text-transform: uppercase;\n  font-size: 1.2em;\n  color: var(--text);\n  margin-top: 2em;\n  margin-bottom: 0.4em;\n}\n\n.asset-list,\n.shot-list {\n  color: var(--text);\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.asset-link,\n.shot-link {\n  color: inherit;\n  margin-right: 1em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 0.8em;\n}\n\n.asset-link div,\n.shot-link div {\n  max-width: 100px;\n}\n\n.asset-link span,\n.shot-link span {\n  word-wrap: break-word;\n}\n\n.field-label {\n  font-weight: bold;\n  width: 120px;\n}\n\n.page-header {\n  align-items: center;\n}\n\n.back-link {\n  padding-top: 3px;\n}\n\n.task-list {\n  max-width: 100%;\n}\n\n.datatable-row {\n  user-select: text;\n}\n\n.schedule {\n  position: relative;\n  height: 100%;\n\n  .timelien-wrapper,\n  .timeline {\n    height: 100%;\n  }\n\n  .schedule-title {\n    margin-bottom: 5px;\n  }\n\n  .wrapper {\n    height: 100%;\n    border-radius: 10px;\n  }\n}\n\n.section-combo {\n  width: 150px;\n\n  .option-line {\n    width: 150px;\n  }\n}\n\n.entity-thumbnail {\n  margin-bottom: 0;\n}\n\n@media screen and (max-width: 768px) {\n  .task-column {\n    margin-bottom: 1em;\n  }\n\n  .column:first-child {\n    margin-right: 0;\n  }\n\n  .entity-title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n}\n\n.tag-standby {\n  background: $red;\n  color: $white;\n  cursor: default;\n  text-transform: uppercase;\n}\n\n.dark .tag-standby {\n  background: $dark-red;\n}\n</style>\n"],"names":["_sfc_main","entityMixin","formatListMixin","ButtonSimple","ComboboxNumber","CornerLeftUpIcon","ComboboxStyled","DescriptionCell","EditAssetModal","EntityNews","EntityPreviewFiles","EntityThumbnail","EntityTaskList","EntityTimeLogs","PageSubtitle","Schedule","TableInfo","TaskInfo","TaskTypeName","mapGetters","assets","currentIndex","asset","index","route","mapActions","tab","resolve","reject","assetId","form","err","shot"],"mappings":"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"}