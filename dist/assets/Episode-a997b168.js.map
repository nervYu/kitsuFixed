{"version":3,"file":"Episode-a997b168.js","sources":["../../src/components/pages/Episode.vue"],"sourcesContent":["<template>\n<div class=\"columns fixed-page episode xyz-in\" xyz=\"fade\">\n  <div class=\"column main-column\">\n    <div class=\"page-header flexrow\">\n      <router-link\n        class=\"flexrow-item has-text-centered back-link\"\n        :to=\"getEpisodesRoute\"\n      >\n        <corner-left-up-icon />\n      </router-link>\n      <span\n        class=\"flexrow-item ml2\"\n      >\n        <entity-thumbnail\n          class=\"entity-thumbnail\"\n          :entity=\"currentEpisode\"\n          :empty-width=\"120\"\n          :empty-height=\"50\"\n          :width=\"120\"\n          v-if=\"currentEpisode\"\n        />\n      </span>\n      <div class=\"flexrow-item\">\n        <page-title :text=\"title\" class=\"entity-title\" />\n      </div>\n    </div>\n\n    <div class=\"flexrow infos\">\n      <div class=\"flexrow-item block flexcolumn\">\n        <page-subtitle :text=\"$t('episodes.tasks')\" />\n        <entity-task-list\n          class=\"task-list\"\n          :entries=\"currentTasks.map(t => t.id)\"\n          :is-loading=\"!currentEpisode\"\n          :is-error=\"false\"\n          @task-selected=\"onTaskSelected\"\n        />\n      </div>\n      <div class=\"flexrow-item block flexcolumn\">\n        <div class=\"flexrow\">\n          <page-subtitle :text=\"$t('main.info')\" />\n          <div class=\"filler\"></div>\n          <div class=\"flexrow-item has-text-right\">\n            <button-simple\n              icon=\"edit\"\n              @click=\"modals.edit = true\"\n              v-if=\"isCurrentUserManager\"\n            />\n          </div>\n        </div>\n        <div class=\"table-body\">\n          <table class=\"datatable no-header\" v-if=\"currentEpisode\">\n            <tbody class=\"datatable-body\">\n              <tr\n                class=\"datatable-row\"\n              >\n                <td class=\"field-label\">{{ $t('shots.fields.description') }}</td>\n                <description-cell\n                  :entry=\"currentEpisode\"\n                  :full=\"true\"\n                />\n              </tr>\n\n              <tr\n                :key=\"descriptor.id\"\n                class=\"datatable-row\"\n                v-for=\"descriptor in episodeMetadataDescriptors\"\n              >\n                <td class=\"field-label\">{{ descriptor.name }}</td>\n                <td>\n                  {{ currentEpisode && currentEpisode.data\n                     ? currentEpisode.data[descriptor.field_name] : '' }}\n                </td>\n              </tr>\n\n            </tbody>\n        </table>\n      </div>\n      </div>\n    </div>\n\n    <div class=\"episode-data block\">\n      <div class=\"flexrow\">\n        <combobox-styled\n          class=\"section-combo flexrow-item\"\n          :options=\"entityNavOptions\"\n          v-model=\"currentSection\"\n        />\n        <span\n          v-show=\"currentSection === 'casting'\"\n        >\n          {{ nbAssets }} {{ $tc('assets.number', nbAssets) }}\n        </span>\n        <span\n          class=\"tag tag-standby\"\n          v-show=\"currentSection === 'casting' && currentEpisode.is_casting_standby\"\n        >\n          {{ $t('breakdown.fields.standby') }}\n        </span>\n        <div class=\"filler\"></div>\n        <span\n          class=\"flexrow-item mt05\"\n          v-show=\"currentSection === 'schedule'\"\n        >\n          {{ $t('schedule.zoom_level') }}:\n        </span>\n        <combobox-number\n          class=\"zoom-level flexrow-item \"\n          :options=\"zoomOptions\"\n          is-simple\n          v-model=\"zoomLevel\"\n          v-show=\"currentSection === 'schedule'\"\n        />\n      </div>\n\n      <div\n        class=\"episode-casting\"\n        v-show=\"currentSection === 'casting'\"\n      >\n        <div\n          v-if=\"currentEpisode\"\n        >\n          <div\n            v-if=\"currentEpisode &&\n                  currentEpisode.castingAssetsByType &&\n                  currentEpisode.castingAssetsByType[0].length > 0\"\n          >\n            <div\n              class=\"type-assets\"\n              :key=\"typeAssets.length > 0 ? typeAssets[0].asset_type_name : ''\"\n              v-for=\"typeAssets in currentEpisode.castingAssetsByType\"\n            >\n              <div class=\"asset-type\">\n                {{ typeAssets.length > 0 ? typeAssets[0].asset_type_name : '' }}\n                ({{ typeAssets.length }})\n              </div>\n              <div class=\"asset-list\">\n                <router-link\n                  class=\"asset-link\"\n                  :key=\"asset.id\"\n                  :to=\"buildAssetRoute(asset)\"\n                  v-for=\"asset in typeAssets\"\n                >\n                  <entity-thumbnail\n                    class=\"entity-thumbnail\"\n                    :entity=\"asset\"\n                    :square=\"true\"\n                    :empty-width=\"103\"\n                    :empty-height=\"103\"\n                    :with-link=\"false\"\n                    :no-cache=\"true\"\n                  />\n                  <div>\n                    {{ asset.asset_name }}\n                    <span v-if=\"asset.nb_occurences > 1\">\n                      ({{ asset.nb_occurences }})\n                    </span>\n                  </div>\n                  <div\n                    class=\"ready-for flexrow\"\n                  >\n                    <task-type-name\n                      class=\"flexrow-item\"\n                      :task-type=\"taskTypeMap.get(asset.ready_for)\"\n                      :current-production-id=\"currentProduction.id\"\n                      :title=\"'Ready for: ' + taskTypeMap.get(asset.ready_for).name\"\n                      v-if=\"asset.ready_for\"\n                    />\n                  </div>\n                </router-link>\n              </div>\n            </div>\n          </div>\n          <div class=\"mt1\" v-else>\n            {{ $t('episodes.no_casting') }}\n          </div>\n        </div>\n        <table-info\n          :is-loading=\"casting.isLoading\"\n          :is-error=\"casting.isError\"\n          v-else\n        />\n      </div>\n\n      <div\n        class=\"schedule mt1\"\n        v-if=\"scheduleItems[0].children.length > 0\"\n        v-show=\"currentSection === 'schedule'\"\n       >\n        <div class=\"wrapper\">\n          <schedule\n            ref=\"schedule-widget\"\n            :start-date=\"tasksStartDate\"\n            :end-date=\"tasksEndDate\"\n            :hierarchy=\"scheduleItems\"\n            :zoom-level=\"zoomLevel\"\n            :is-loading=\"false\"\n            :is-estimation-linked=\"true\"\n            :hide-root=\"true\"\n            :with-milestones=\"false\"\n          />\n        </div>\n      </div>\n      <div\n        class=\"mt1\"\n        v-else\n        v-show=\"currentSection === 'schedule'\"\n      >\n        {{ $t('main.empty_schedule') }}\n      </div>\n\n      <entity-preview-files\n        :entity=\"currentEpisode\"\n        v-if=\"currentSection === 'preview-files'\"\n      />\n\n      <entity-news\n        :entity=\"currentEpisode\"\n        v-if=\"currentSection === 'activity'\"\n      />\n\n      <entity-time-logs\n        :entity=\"currentEpisode\"\n        v-if=\"currentSection === 'time-logs'\"\n      />\n    </div>\n  </div>\n\n  <div\n    class=\"column side-column\"\n    v-if=\"currentTask\"\n  >\n    <task-info\n      :task=\"currentTask\"\n    />\n  </div>\n\n  <edit-episode-modal\n    ref=\"edit-episode-modal\"\n    :active=\"modals.edit\"\n    :is-loading=\"loading.edit\"\n    :is-error=\"errors.edit\"\n    :episode-to-edit=\"currentEpisode\"\n    @cancel=\"modals.edit = false\"\n    @confirm=\"confirmEditEpisode\"\n  />\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { CornerLeftUpIcon } from 'vue-feather-icons'\n\nimport { episodifyRoute } from '@/lib/path'\nimport { entityMixin } from '@/components/mixins/entity'\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled'\nimport DescriptionCell from '@/components/cells/DescriptionCell'\nimport EditEpisodeModal from '@/components/modals/EditEpisodeModal'\nimport EntityNews from '@/components/pages/entities/EntityNews'\nimport EntityPreviewFiles from '@/components/pages/entities/EntityPreviewFiles'\nimport EntityTaskList from '@/components/lists/EntityTaskList'\nimport EntityTimeLogs from '@/components/pages/entities/EntityTimeLogs'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport PageTitle from '@/components/widgets/PageTitle'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport Schedule from '@/components/pages/schedule/Schedule'\nimport TableInfo from '@/components/widgets/TableInfo'\nimport TaskInfo from '@/components/sides/TaskInfo'\nimport TaskTypeName from '@/components/widgets/TaskTypeName'\n\nexport default {\n  name: 'episode',\n  mixins: [entityMixin, formatListMixin],\n  components: {\n    ButtonSimple,\n    ComboboxNumber,\n    ComboboxStyled,\n    CornerLeftUpIcon,\n    DescriptionCell,\n    EditEpisodeModal,\n    EntityNews,\n    EntityPreviewFiles,\n    EntityTaskList,\n    EntityTimeLogs,\n    EntityThumbnail,\n    PageSubtitle,\n    PageTitle,\n    Schedule,\n    TableInfo,\n    TaskInfo,\n    TaskTypeName\n  },\n\n  data () {\n    return {\n      type: 'episode',\n      currentEpisode: null,\n      currentTask: null,\n      casting: {\n        isLoading: false,\n        isError: false\n      },\n      errors: {\n        edit: false\n      },\n      loading: {\n        edit: false\n      },\n      modals: {\n        edit: false,\n        preview: false\n      }\n    }\n  },\n\n  mounted () {\n    this.clearSelectedTasks()\n    this.loadCurrentEpisode()\n      .then(episode => {\n        this.currentEpisode = episode\n        this.currentSection = this.route.query.section || 'casting'\n        this.casting.isLoading = true\n        this.casting.isError = false\n        if (this.currentEpisode) {\n          this.loadEpisodeCasting(this.currentEpisode)\n            .then(() => {\n              this.casting.isLoading = false\n            })\n            .catch(err => {\n              this.casting.isLoading = false\n              this.casting.isError = true\n              console.error(err)\n            })\n        } else {\n          this.resetData()\n        }\n      })\n      .catch(console.error)\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'getTaskTypePriority',\n      'episodeMap',\n      'episodeMetadataDescriptors',\n      'episodeSearchText',\n      'isCurrentUserManager',\n      'route',\n      'taskMap',\n      'taskTypeMap'\n    ]),\n\n    title () {\n      if (this.currentEpisode) {\n        return `${this.currentEpisode.name}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    currentEntity () {\n      return this.currentEpisode\n    },\n\n    getEpisodesRoute () {\n      const route = {\n        name: 'episodes',\n        params: {\n          production_id: this.currentProduction.id,\n          project_id: this.currentProduction.id\n        },\n        query: {\n          search: this.episodeSearchText\n        }\n      }\n      route.name = 'episodes'\n      return route\n    },\n\n    nbAssets () {\n      let nbAssets = 0\n      if (\n        this.currentEpisode &&\n        this.currentSection === 'casting' &&\n        this.currentEpisode.castingAssetsByType\n      ) {\n        this.currentEpisode.castingAssetsByType.forEach(group => {\n          nbAssets += group.length\n        })\n      }\n      return nbAssets\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'clearSelectedTasks',\n      'editEpisode',\n      'setCurrentEpisode',\n      'loadEpisodesWithTasks',\n      'loadEpisodeCasting'\n    ]),\n\n    loadCurrentEpisode () {\n      return new Promise((resolve, reject) => {\n        const episodeId = this.route.params.episode_id\n        const episode = this.episodeMap.get(episodeId) || null\n        if (!episode || !episode.validations) {\n          return this.loadEpisodesWithTasks()\n            .then(() => {\n              const episode = this.episodeMap.get(episodeId) || null\n              return resolve(episode)\n            })\n        } else {\n          return resolve(episode)\n        }\n      })\n    },\n\n    confirmEditEpisode (form) {\n      form.id = this.currentEpisode.id\n      this.loading.edit = true\n      this.errors.edit = false\n      this.editEpisode(form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    buildAssetRoute (asset) {\n      let episodeId = asset.episode_id\n      if (!episodeId) episodeId = 'main'\n      const route = {\n        name: 'asset',\n        params: {\n          production_id: this.currentProduction.id,\n          asset_id: asset.asset_id\n        }\n      }\n      return episodifyRoute(route, episodeId)\n    },\n\n    resetData () {\n      this.casting.isLoading = true\n\n      // Next tick is needed to wait for the episode change.\n      this.$nextTick(() => {\n        this.getCurrentEpisode()\n          .then(episode => {\n            this.currentEpisode = episode\n            return this.loadEpisodeCasting(this.currentEpisode)\n          })\n          .then(() => {\n            this.casting.isLoading = false\n          })\n          .catch(err => {\n            this.casting.isError = true\n            this.casting.isLoading = false\n            console.error(err)\n          })\n      })\n    }\n  },\n\n  watch: {\n  },\n\n  metaInfo () {\n    return {\n      title: `${this.title} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .page {\n    background: $dark-grey-light;\n    height: 100%;\n    padding-bottom: 1em;\n  }\n\n  .wrapper {\n    background: $dark-grey-2;\n  }\n\n  .tag-standby {\n    background: $dark-red;\n  }\n}\n\n.main-column {\n  display: flex;\n  flex-direction: column;\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\nh2.subtitle {\n  margin-top: 0;\n  margin-bottom: 0.5em;\n  font-size: 1.5em;\n}\n\n.page-header {\n  margin-top: calc(50px + 2em);\n  margin-bottom: 0.8em;\n  margin-left: 2em;\n  margin-right: 1em;\n\n  .entity-title {\n    font-weight: 500;\n  }\n}\n\n.infos {\n  height: 350px;\n  margin-bottom: 1em;\n  margin-left: 1em;\n  margin-right: 1em;\n\n  .flexrow-item {\n    align-self: flex-start;\n    height: 100%;\n    flex: 1;\n  }\n}\n\n.episode-data {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  margin: 0 1em 0 1em;\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.episode-casting {\n  overflow-y: auto;\n}\n\n.asset-link .thumbnail-picture {\n  margin-bottom: 0.5em;\n}\n\n.asset-type {\n  text-transform: uppercase;\n  font-size: 1.2em;\n  color: var(--text);\n  margin-top: 2em;\n  margin-bottom: 0.4em;\n}\n\n.asset-list {\n  color: var(--text);\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.asset-link {\n  color: inherit;\n  margin-right: 1em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 0.8em;\n}\n\n.asset-link div {\n  max-width: 100px;\n}\n\n.asset-link span {\n  word-wrap: break-word;\n}\n\n.field-label {\n  font-weight: bold;\n  width: 140px;\n}\n\n.page-header {\n  align-items: center;\n}\n\n.data-list {\n  max-width: 100%;\n}\n\n.back-link {\n  padding-top: 3px;\n}\n\n.task-list {\n  width: 100%;\n}\n\n.datatable-row {\n  user-select: text;\n}\n\n.schedule {\n  position: relative;\n  height: 100%;\n\n  .timelien-wrapper,\n  .timeline {\n    height: 100%;\n  }\n\n  .schedule-title {\n    margin-bottom: 5px;\n  }\n\n  .wrapper {\n    height: 100%;\n    border-radius: 10px;\n  }\n}\n\n.section-combo {\n  width: 150px;\n\n  .option-line {\n    width: 150px;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .task-column {\n    margin-bottom: 1em;\n  }\n\n  .column:first-child {\n    margin-right: 0;\n  }\n\n  .entity-title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n}\n\n.tag-standby {\n  background: $red;\n  color: $white;\n  margin-left: 1em;\n  cursor: default;\n  text-transform: uppercase;\n}\n</style>\n"],"names":["_sfc_main","entityMixin","formatListMixin","ButtonSimple","ComboboxNumber","ComboboxStyled","CornerLeftUpIcon","DescriptionCell","EditEpisodeModal","EntityNews","EntityPreviewFiles","EntityTaskList","EntityTimeLogs","EntityThumbnail","PageSubtitle","PageTitle","Schedule","TableInfo","TaskInfo","TaskTypeName","episode","err","mapGetters","route","nbAssets","group","mapActions","resolve","reject","episodeId","form","asset","episodifyRoute"],"mappings":"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"}