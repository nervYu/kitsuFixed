{"version":3,"file":"CustomActions-9305d81c.js","sources":["../../src/components/lists/CustomActionList.vue","../../src/components/modals/EditCustomActionModal.vue","../../src/components/pages/CustomActions.vue"],"sourcesContent":["<template>\n<div class=\"data-list\">\n  <div class=\"datatable-wrapper\">\n    <table class=\"datatable\">\n      <thead class=\"datatable-head\">\n        <tr>\n          <th scope=\"col\" class=\"name\">\n            {{ $t('custom_actions.fields.name') }}\n          </th>\n          <th scope=\"col\" class=\"url\">\n            {{ $t('custom_actions.fields.url') }}\n          </th>\n          <th scope=\"col\" class=\"entity-type\">\n            {{ $t('custom_actions.fields.entity_type') }}\n          </th>\n          <th scope=\"col\" class=\"is-ajax\">\n            {{ $t('custom_actions.fields.is_ajax') }}\n          </th>\n          <th scope=\"col\" class=\"actions\">&nbsp;</th>\n        </tr>\n      </thead>\n      <tbody class=\"datatable-body\">\n        <tr\n          class=\"datatable-row\"\n          v-for=\"customAction in entries\"\n          :key=\"customAction.id\"\n        >\n          <td scope=\"row\" class=\"name datatable-row-header\">\n            {{ customAction.name }}\n          </td>\n          <td class=\"url\">{{ customAction.url }}</td>\n          <td class=\"entity-type\">{{ customAction.entity_type }}</td>\n          <td class=\"is-ajax\">\n            {{ formatBoolean(customAction.is_ajax) }}\n          </td>\n          <row-actions-cell\n            :entry-id=\"customAction.id\"\n            @edit-clicked=\"$emit('edit-clicked', customAction)\"\n            @delete-clicked=\"$emit('delete-clicked', customAction)\"\n          />\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <table-info\n    :is-loading=\"isLoading\"\n    :is-error=\"isError\"\n  />\n\n  <p class=\"has-text-centered nb-custom-actions\">\n    {{ entries.length }} {{ $tc('custom_actions.number', entries.length) }}\n  </p>\n\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport RowActionsCell from '@/components/cells/RowActionsCell'\nimport TableInfo from '@/components/widgets/TableInfo'\n\nexport default {\n  name: 'custom-action-list',\n  mixins: [formatListMixin],\n\n  props: {\n    entries: {\n      type: Array,\n      default: () => []\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data () {\n    return {}\n  },\n  components: {\n    RowActionsCell,\n    TableInfo\n  },\n  computed: {\n    ...mapGetters([\n    ])\n  },\n  methods: {\n    ...mapActions([\n    ]),\n    renderForShots (entry) {\n      return this.$tc(`${entry.toLowerCase()}.title`)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.datatable-body tr:first-child th,\n.datatable-body tr:first-child td {\n  border-top: 0;\n}\n\n.name {\n  width: 200px;\n  min-width: 200px;\n}\n\n.url {\n  width: 400px;\n  min-width: 400px;\n}\n\n.entity-type {\n  width: 200px;\n  min-width: 200px;\n}\n\n.is-ajax {\n  width: 150px;\n  min-width: 150px;\n}\n\n.thead {\n  width: 100%\n}\n</style>\n","<template>\n<div :class=\"{\n  'modal': true,\n  'is-active': active\n}\">\n  <div class=\"modal-background\" @click=\"$emit('cancel')\" ></div>\n\n  <div class=\"modal-content\">\n\n    <div class=\"box\">\n\n      <h1 class=\"title\" v-if=\"isEditing()\">\n        {{ $t(\"custom_actions.edit_title\") }} {{ customActionToEdit.name }}\n      </h1>\n      <h1 class=\"title\" v-else>\n        {{ $t(\"custom_actions.new_custom_action\") }}\n      </h1>\n\n      <form v-on:submit.prevent>\n        <text-field\n          ref=\"nameField\"\n          :label=\"$t('custom_actions.fields.name')\"\n          v-model=\"form.name\"\n          v-focus\n        />\n\n        <text-field\n          ref=\"urlField\"\n          :label=\"$t('custom_actions.fields.url')\"\n          v-model=\"form.url\"\n          @enter=\"confirmClicked\"\n        />\n\n        <combobox\n          :label=\"$t('custom_actions.fields.entity_type')\"\n          :options=\"entityTypeOptions\"\n          v-model=\"form.entityType\"\n          locale-key-prefix=\"custom_actions.entity_types.\"\n          @enter=\"confirmClicked\"\n        />\n\n        <combobox-boolean\n          :label=\"$t('custom_actions.fields.is_ajax')\"\n          v-model=\"form.isAjax\"\n          @enter=\"confirmClicked\"\n        />\n      </form>\n\n      <modal-footer\n        :error-text=\"$t('custom_actions.create_error')\"\n        :is-error=\"isError\"\n        @confirm=\"confirmClicked\"\n        @cancel=\"$emit('cancel')\"\n      />\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { modalMixin } from '@/components/modals/base_modal'\nimport Combobox from '@/components/widgets/Combobox'\nimport ComboboxBoolean from '@/components/widgets/ComboboxBoolean'\nimport ModalFooter from '@/components/modals/ModalFooter'\nimport TextField from '@/components/widgets/TextField'\n\nexport default {\n  name: 'edit-custom-action-modal',\n  mixins: [modalMixin],\n  components: {\n    Combobox,\n    ComboboxBoolean,\n    ModalFooter,\n    TextField\n  },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    customActionToEdit: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  data () {\n    return {\n      form: {\n        name: '',\n        url: '',\n        entityType: 'all',\n        isAjax: 'false'\n      },\n      entityTypeOptions: [\n        {\n          label: 'all',\n          value: 'all'\n        },\n        {\n          label: 'asset',\n          value: 'asset'\n        },\n        {\n          label: 'shot',\n          value: 'shot'\n        }\n      ]\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'customActions',\n      'customActionStatusOptions'\n    ])\n  },\n\n  methods: {\n    ...mapActions([\n    ]),\n    confirmClicked () {\n      this.$emit('confirm', this.form)\n    },\n    isEditing () {\n      return this.customActionToEdit && this.customActionToEdit.id\n    }\n  },\n\n  watch: {\n    customActionToEdit () {\n      if (this.customActionToEdit) {\n        this.form = {\n          name: this.customActionToEdit.name,\n          url: this.customActionToEdit.url,\n          entityType: this.customActionToEdit.entity_type,\n          isAjax: Boolean(this.customActionToEdit.is_ajax).toString()\n        }\n      }\n    },\n\n    active () {\n      if (this.active) {\n        setTimeout(() => {\n          this.$refs.nameField.focus()\n        }, 100)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-content .box p.text {\n  margin-bottom: 1em;\n}\n.is-danger {\n  color: #ff3860;\n  font-style: italic;\n}\n</style>\n","<template>\n  <div class=\"custom-actions page fixed-page\">\n    <list-page-header\n      :title=\"$t('custom_actions.title')\"\n      :new-entry-label=\"$t('custom_actions.new_custom_action')\"\n      @new-clicked=\"onNewClicked\"\n    />\n\n    <custom-action-list\n      :entries=\"customActions\"\n      :is-loading=\"loading.list\"\n      :is-error=\"errors.list\"\n      @edit-clicked=\"onEditClicked\"\n      @delete-clicked=\"onDeleteClicked\"\n    />\n\n    <edit-custom-action-modal\n      :active=\"modals.edit\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :custom-action-to-edit=\"customActionToEdit\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditCustomAction\"\n    />\n\n    <delete-modal\n      :active=\"modals.del\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText\"\n      :error-text=\"$t('custom_actions.delete_error')\"\n      @cancel=\"modals.delete = false\"\n      @confirm=\"confirmDeleteCustomAction\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport CustomActionList from '@/components/lists/CustomActionList'\nimport DeleteModal from '@/components/modals/DeleteModal'\nimport EditCustomActionModal from '@/components/modals/EditCustomActionModal'\nimport ListPageHeader from '@/components/widgets/ListPageHeader'\n\nexport default {\n  name: 'custom-actions',\n\n  components: {\n    CustomActionList,\n    DeleteModal,\n    EditCustomActionModal,\n    ListPageHeader\n  },\n\n  data () {\n    return {\n      modals: {\n        edit: false,\n        del: false\n      },\n      loading: {\n        edit: false,\n        del: false,\n        list: false\n      },\n      errors: {\n        edit: false,\n        del: false,\n        list: false\n      },\n      customActionToDelete: null,\n      customActionToEdit: null\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'customActions'\n    ]),\n\n    deleteText () {\n      const customAction = this.customActionToDelete\n      if (customAction) {\n        return this.$t(\n          'custom_actions.delete_text', { name: customAction.name })\n      } else {\n        return ''\n      }\n    }\n  },\n\n  created () {\n    this.loading.list = true\n    this.errors.list = false\n    this.loadCustomActions((err) => {\n      this.loading.list = false\n      if (err) {\n        this.errors.list = true\n      }\n    })\n  },\n\n  methods: {\n    ...mapActions([\n      'deleteCustomAction',\n      'editCustomAction',\n      'loadCustomActions',\n      'newCustomAction'\n    ]),\n\n    confirmEditCustomAction (form) {\n      let action = 'newCustomAction'\n      if (this.customActionToEdit && this.customActionToEdit.id) {\n        action = 'editCustomAction'\n        form.id = this.customActionToEdit.id\n      }\n\n      this.loading.edit = true\n      this.errors.edit = false\n      this[action](form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.edit = true\n          this.modals.isNewDisplayed = false\n        })\n    },\n\n    confirmDeleteCustomAction () {\n      this.loading.del = true\n      this.errors.del = false\n      this.deleteCustomAction(this.customActionToDelete)\n        .then(() => {\n          this.loading.del = false\n          this.modals.del = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.del = true\n          this.loading.del = false\n        })\n    },\n\n    onNewClicked () {\n      this.customActionToEdit = {}\n      this.errors.edit = false\n      this.modals.edit = true\n    },\n\n    onEditClicked (customAction) {\n      this.customActionToEdit = customAction\n      this.errors.edit = false\n      this.modals.edit = true\n    },\n\n    onDeleteClicked (customAction) {\n      this.customActionToDelete = customAction\n      this.errors.del = false\n      this.modals.del = true\n    }\n  },\n\n  watch: {\n    $route () { this.handleModalsDisplay() }\n  },\n\n  metaInfo () {\n    return {\n      title: `${this.$t('custom_actions.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"],"names":["_sfc_main","formatListMixin","RowActionsCell","TableInfo","mapGetters","mapActions","entry","modalMixin","Combobox","ComboboxBoolean","ModalFooter","TextField","CustomActionList","DeleteModal","EditCustomActionModal","ListPageHeader","customAction","err","form","action"],"mappings":"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"}